// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.31.1
// source: bonanza.build/pkg/proto/model/starlark/starlark.proto

package starlark

import (
	core "bonanza.build/pkg/proto/model/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Depset_Order int32

const (
	Depset_DEFAULT     Depset_Order = 0
	Depset_POSTORDER   Depset_Order = 1
	Depset_PREORDER    Depset_Order = 2
	Depset_TOPOLOGICAL Depset_Order = 3
)

// Enum value maps for Depset_Order.
var (
	Depset_Order_name = map[int32]string{
		0: "DEFAULT",
		1: "POSTORDER",
		2: "PREORDER",
		3: "TOPOLOGICAL",
	}
	Depset_Order_value = map[string]int32{
		"DEFAULT":     0,
		"POSTORDER":   1,
		"PREORDER":    2,
		"TOPOLOGICAL": 3,
	}
)

func (x Depset_Order) Enum() *Depset_Order {
	p := new(Depset_Order)
	*p = x
	return p
}

func (x Depset_Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Depset_Order) Descriptor() protoreflect.EnumDescriptor {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_enumTypes[0].Descriptor()
}

func (Depset_Order) Type() protoreflect.EnumType {
	return &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_enumTypes[0]
}

func (x Depset_Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Depset_Order.Descriptor instead.
func (Depset_Order) EnumDescriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{6, 0}
}

type File_Owner_Type int32

const (
	File_Owner_FILE      File_Owner_Type = 0
	File_Owner_DIRECTORY File_Owner_Type = 1
	File_Owner_SYMLINK   File_Owner_Type = 2
)

// Enum value maps for File_Owner_Type.
var (
	File_Owner_Type_name = map[int32]string{
		0: "FILE",
		1: "DIRECTORY",
		2: "SYMLINK",
	}
	File_Owner_Type_value = map[string]int32{
		"FILE":      0,
		"DIRECTORY": 1,
		"SYMLINK":   2,
	}
)

func (x File_Owner_Type) Enum() *File_Owner_Type {
	p := new(File_Owner_Type)
	*p = x
	return p
}

func (x File_Owner_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (File_Owner_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_enumTypes[1].Descriptor()
}

func (File_Owner_Type) Type() protoreflect.EnumType {
	return &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_enumTypes[1]
}

func (x File_Owner_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use File_Owner_Type.Descriptor instead.
func (File_Owner_Type) EnumDescriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{9, 0, 0}
}

type Select_ConcatenationOperator int32

const (
	Select_NONE Select_ConcatenationOperator = 0
	Select_PIPE Select_ConcatenationOperator = 1
	Select_PLUS Select_ConcatenationOperator = 2
)

// Enum value maps for Select_ConcatenationOperator.
var (
	Select_ConcatenationOperator_name = map[int32]string{
		0: "NONE",
		1: "PIPE",
		2: "PLUS",
	}
	Select_ConcatenationOperator_value = map[string]int32{
		"NONE": 0,
		"PIPE": 1,
		"PLUS": 2,
	}
)

func (x Select_ConcatenationOperator) Enum() *Select_ConcatenationOperator {
	p := new(Select_ConcatenationOperator)
	*p = x
	return p
}

func (x Select_ConcatenationOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Select_ConcatenationOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_enumTypes[2].Descriptor()
}

func (Select_ConcatenationOperator) Type() protoreflect.EnumType {
	return &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_enumTypes[2]
}

func (x Select_ConcatenationOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Select_ConcatenationOperator.Descriptor instead.
func (Select_ConcatenationOperator) EnumDescriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{30, 0}
}

type CompiledProgram struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Globals       *Struct_Fields         `protobuf:"bytes,1,opt,name=globals,proto3" json:"globals,omitempty"`
	Code          []byte                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompiledProgram) Reset() {
	*x = CompiledProgram{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompiledProgram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompiledProgram) ProtoMessage() {}

func (x *CompiledProgram) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompiledProgram.ProtoReflect.Descriptor instead.
func (*CompiledProgram) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{0}
}

func (x *CompiledProgram) GetGlobals() *Struct_Fields {
	if x != nil {
		return x.Globals
	}
	return nil
}

func (x *CompiledProgram) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

type Value struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*Value_Aspect
	//	*Value_Attr
	//	*Value_Bool
	//	*Value_Builtin
	//	*Value_Bytes
	//	*Value_Depset
	//	*Value_Dict
	//	*Value_ExecGroup
	//	*Value_File
	//	*Value_Function
	//	*Value_Int
	//	*Value_Label
	//	*Value_List
	//	*Value_ModuleExtension
	//	*Value_None
	//	*Value_Provider
	//	*Value_RepositoryRule
	//	*Value_Rule
	//	*Value_Select
	//	*Value_Set
	//	*Value_Str
	//	*Value_Struct
	//	*Value_Subrule
	//	*Value_TagClass
	//	*Value_TargetReference
	//	*Value_ToolchainType
	//	*Value_Transition
	//	*Value_Tuple
	Kind          isValue_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Value) Reset() {
	*x = Value{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{1}
}

func (x *Value) GetKind() isValue_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Value) GetAspect() *Aspect {
	if x != nil {
		if x, ok := x.Kind.(*Value_Aspect); ok {
			return x.Aspect
		}
	}
	return nil
}

func (x *Value) GetAttr() *Attr {
	if x != nil {
		if x, ok := x.Kind.(*Value_Attr); ok {
			return x.Attr
		}
	}
	return nil
}

func (x *Value) GetBool() bool {
	if x != nil {
		if x, ok := x.Kind.(*Value_Bool); ok {
			return x.Bool
		}
	}
	return false
}

func (x *Value) GetBuiltin() string {
	if x != nil {
		if x, ok := x.Kind.(*Value_Builtin); ok {
			return x.Builtin
		}
	}
	return ""
}

func (x *Value) GetBytes() []byte {
	if x != nil {
		if x, ok := x.Kind.(*Value_Bytes); ok {
			return x.Bytes
		}
	}
	return nil
}

func (x *Value) GetDepset() *Depset {
	if x != nil {
		if x, ok := x.Kind.(*Value_Depset); ok {
			return x.Depset
		}
	}
	return nil
}

func (x *Value) GetDict() *Dict {
	if x != nil {
		if x, ok := x.Kind.(*Value_Dict); ok {
			return x.Dict
		}
	}
	return nil
}

func (x *Value) GetExecGroup() *ExecGroup {
	if x != nil {
		if x, ok := x.Kind.(*Value_ExecGroup); ok {
			return x.ExecGroup
		}
	}
	return nil
}

func (x *Value) GetFile() *File {
	if x != nil {
		if x, ok := x.Kind.(*Value_File); ok {
			return x.File
		}
	}
	return nil
}

func (x *Value) GetFunction() *Function {
	if x != nil {
		if x, ok := x.Kind.(*Value_Function); ok {
			return x.Function
		}
	}
	return nil
}

func (x *Value) GetInt() *Int {
	if x != nil {
		if x, ok := x.Kind.(*Value_Int); ok {
			return x.Int
		}
	}
	return nil
}

func (x *Value) GetLabel() string {
	if x != nil {
		if x, ok := x.Kind.(*Value_Label); ok {
			return x.Label
		}
	}
	return ""
}

func (x *Value) GetList() *List {
	if x != nil {
		if x, ok := x.Kind.(*Value_List); ok {
			return x.List
		}
	}
	return nil
}

func (x *Value) GetModuleExtension() *ModuleExtension {
	if x != nil {
		if x, ok := x.Kind.(*Value_ModuleExtension); ok {
			return x.ModuleExtension
		}
	}
	return nil
}

func (x *Value) GetNone() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Kind.(*Value_None); ok {
			return x.None
		}
	}
	return nil
}

func (x *Value) GetProvider() *Provider {
	if x != nil {
		if x, ok := x.Kind.(*Value_Provider); ok {
			return x.Provider
		}
	}
	return nil
}

func (x *Value) GetRepositoryRule() *RepositoryRule {
	if x != nil {
		if x, ok := x.Kind.(*Value_RepositoryRule); ok {
			return x.RepositoryRule
		}
	}
	return nil
}

func (x *Value) GetRule() *Rule {
	if x != nil {
		if x, ok := x.Kind.(*Value_Rule); ok {
			return x.Rule
		}
	}
	return nil
}

func (x *Value) GetSelect() *Select {
	if x != nil {
		if x, ok := x.Kind.(*Value_Select); ok {
			return x.Select
		}
	}
	return nil
}

func (x *Value) GetSet() *Set {
	if x != nil {
		if x, ok := x.Kind.(*Value_Set); ok {
			return x.Set
		}
	}
	return nil
}

func (x *Value) GetStr() string {
	if x != nil {
		if x, ok := x.Kind.(*Value_Str); ok {
			return x.Str
		}
	}
	return ""
}

func (x *Value) GetStruct() *Struct {
	if x != nil {
		if x, ok := x.Kind.(*Value_Struct); ok {
			return x.Struct
		}
	}
	return nil
}

func (x *Value) GetSubrule() *Subrule {
	if x != nil {
		if x, ok := x.Kind.(*Value_Subrule); ok {
			return x.Subrule
		}
	}
	return nil
}

func (x *Value) GetTagClass() *TagClass {
	if x != nil {
		if x, ok := x.Kind.(*Value_TagClass); ok {
			return x.TagClass
		}
	}
	return nil
}

func (x *Value) GetTargetReference() *TargetReference {
	if x != nil {
		if x, ok := x.Kind.(*Value_TargetReference); ok {
			return x.TargetReference
		}
	}
	return nil
}

func (x *Value) GetToolchainType() *ToolchainType {
	if x != nil {
		if x, ok := x.Kind.(*Value_ToolchainType); ok {
			return x.ToolchainType
		}
	}
	return nil
}

func (x *Value) GetTransition() *Transition {
	if x != nil {
		if x, ok := x.Kind.(*Value_Transition); ok {
			return x.Transition
		}
	}
	return nil
}

func (x *Value) GetTuple() *Tuple {
	if x != nil {
		if x, ok := x.Kind.(*Value_Tuple); ok {
			return x.Tuple
		}
	}
	return nil
}

type isValue_Kind interface {
	isValue_Kind()
}

type Value_Aspect struct {
	Aspect *Aspect `protobuf:"bytes,1,opt,name=aspect,proto3,oneof"`
}

type Value_Attr struct {
	Attr *Attr `protobuf:"bytes,2,opt,name=attr,proto3,oneof"`
}

type Value_Bool struct {
	Bool bool `protobuf:"varint,3,opt,name=bool,proto3,oneof"`
}

type Value_Builtin struct {
	Builtin string `protobuf:"bytes,4,opt,name=builtin,proto3,oneof"`
}

type Value_Bytes struct {
	Bytes []byte `protobuf:"bytes,5,opt,name=bytes,proto3,oneof"`
}

type Value_Depset struct {
	Depset *Depset `protobuf:"bytes,6,opt,name=depset,proto3,oneof"`
}

type Value_Dict struct {
	Dict *Dict `protobuf:"bytes,7,opt,name=dict,proto3,oneof"`
}

type Value_ExecGroup struct {
	ExecGroup *ExecGroup `protobuf:"bytes,8,opt,name=exec_group,json=execGroup,proto3,oneof"`
}

type Value_File struct {
	File *File `protobuf:"bytes,9,opt,name=file,proto3,oneof"`
}

type Value_Function struct {
	Function *Function `protobuf:"bytes,10,opt,name=function,proto3,oneof"`
}

type Value_Int struct {
	Int *Int `protobuf:"bytes,11,opt,name=int,proto3,oneof"`
}

type Value_Label struct {
	Label string `protobuf:"bytes,12,opt,name=label,proto3,oneof"`
}

type Value_List struct {
	List *List `protobuf:"bytes,13,opt,name=list,proto3,oneof"`
}

type Value_ModuleExtension struct {
	ModuleExtension *ModuleExtension `protobuf:"bytes,14,opt,name=module_extension,json=moduleExtension,proto3,oneof"`
}

type Value_None struct {
	None *emptypb.Empty `protobuf:"bytes,15,opt,name=none,proto3,oneof"`
}

type Value_Provider struct {
	Provider *Provider `protobuf:"bytes,16,opt,name=provider,proto3,oneof"`
}

type Value_RepositoryRule struct {
	RepositoryRule *RepositoryRule `protobuf:"bytes,17,opt,name=repository_rule,json=repositoryRule,proto3,oneof"`
}

type Value_Rule struct {
	Rule *Rule `protobuf:"bytes,18,opt,name=rule,proto3,oneof"`
}

type Value_Select struct {
	Select *Select `protobuf:"bytes,20,opt,name=select,proto3,oneof"`
}

type Value_Set struct {
	Set *Set `protobuf:"bytes,21,opt,name=set,proto3,oneof"`
}

type Value_Str struct {
	Str string `protobuf:"bytes,22,opt,name=str,proto3,oneof"`
}

type Value_Struct struct {
	Struct *Struct `protobuf:"bytes,23,opt,name=struct,proto3,oneof"`
}

type Value_Subrule struct {
	Subrule *Subrule `protobuf:"bytes,24,opt,name=subrule,proto3,oneof"`
}

type Value_TagClass struct {
	TagClass *TagClass `protobuf:"bytes,25,opt,name=tag_class,json=tagClass,proto3,oneof"`
}

type Value_TargetReference struct {
	TargetReference *TargetReference `protobuf:"bytes,26,opt,name=target_reference,json=targetReference,proto3,oneof"`
}

type Value_ToolchainType struct {
	ToolchainType *ToolchainType `protobuf:"bytes,27,opt,name=toolchain_type,json=toolchainType,proto3,oneof"`
}

type Value_Transition struct {
	Transition *Transition `protobuf:"bytes,28,opt,name=transition,proto3,oneof"`
}

type Value_Tuple struct {
	Tuple *Tuple `protobuf:"bytes,29,opt,name=tuple,proto3,oneof"`
}

func (*Value_Aspect) isValue_Kind() {}

func (*Value_Attr) isValue_Kind() {}

func (*Value_Bool) isValue_Kind() {}

func (*Value_Builtin) isValue_Kind() {}

func (*Value_Bytes) isValue_Kind() {}

func (*Value_Depset) isValue_Kind() {}

func (*Value_Dict) isValue_Kind() {}

func (*Value_ExecGroup) isValue_Kind() {}

func (*Value_File) isValue_Kind() {}

func (*Value_Function) isValue_Kind() {}

func (*Value_Int) isValue_Kind() {}

func (*Value_Label) isValue_Kind() {}

func (*Value_List) isValue_Kind() {}

func (*Value_ModuleExtension) isValue_Kind() {}

func (*Value_None) isValue_Kind() {}

func (*Value_Provider) isValue_Kind() {}

func (*Value_RepositoryRule) isValue_Kind() {}

func (*Value_Rule) isValue_Kind() {}

func (*Value_Select) isValue_Kind() {}

func (*Value_Set) isValue_Kind() {}

func (*Value_Str) isValue_Kind() {}

func (*Value_Struct) isValue_Kind() {}

func (*Value_Subrule) isValue_Kind() {}

func (*Value_TagClass) isValue_Kind() {}

func (*Value_TargetReference) isValue_Kind() {}

func (*Value_ToolchainType) isValue_Kind() {}

func (*Value_Transition) isValue_Kind() {}

func (*Value_Tuple) isValue_Kind() {}

type Alias struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Actual        *Select_Group          `protobuf:"bytes,1,opt,name=actual,proto3" json:"actual,omitempty"`
	Visibility    *PackageGroup          `protobuf:"bytes,2,opt,name=visibility,proto3" json:"visibility,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Alias) Reset() {
	*x = Alias{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Alias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alias) ProtoMessage() {}

func (x *Alias) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alias.ProtoReflect.Descriptor instead.
func (*Alias) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{2}
}

func (x *Alias) GetActual() *Select_Group {
	if x != nil {
		return x.Actual
	}
	return nil
}

func (x *Alias) GetVisibility() *PackageGroup {
	if x != nil {
		return x.Visibility
	}
	return nil
}

type Aspect struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*Aspect_Reference
	//	*Aspect_Definition_
	Kind          isAspect_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Aspect) Reset() {
	*x = Aspect{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Aspect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aspect) ProtoMessage() {}

func (x *Aspect) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aspect.ProtoReflect.Descriptor instead.
func (*Aspect) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{3}
}

func (x *Aspect) GetKind() isAspect_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Aspect) GetReference() string {
	if x != nil {
		if x, ok := x.Kind.(*Aspect_Reference); ok {
			return x.Reference
		}
	}
	return ""
}

func (x *Aspect) GetDefinition() *Aspect_Definition {
	if x != nil {
		if x, ok := x.Kind.(*Aspect_Definition_); ok {
			return x.Definition
		}
	}
	return nil
}

type isAspect_Kind interface {
	isAspect_Kind()
}

type Aspect_Reference struct {
	Reference string `protobuf:"bytes,1,opt,name=reference,proto3,oneof"`
}

type Aspect_Definition_ struct {
	Definition *Aspect_Definition `protobuf:"bytes,2,opt,name=definition,proto3,oneof"`
}

func (*Aspect_Reference) isAspect_Kind() {}

func (*Aspect_Definition_) isAspect_Kind() {}

type Attr struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Default *Value                 `protobuf:"bytes,1,opt,name=default,proto3" json:"default,omitempty"`
	// Types that are valid to be assigned to Type:
	//
	//	*Attr_Bool
	//	*Attr_Int
	//	*Attr_IntList
	//	*Attr_Label
	//	*Attr_LabelKeyedStringDict
	//	*Attr_LabelList
	//	*Attr_Output
	//	*Attr_OutputList
	//	*Attr_String_
	//	*Attr_StringDict
	//	*Attr_StringList
	//	*Attr_StringListDict
	Type          isAttr_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attr) Reset() {
	*x = Attr{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr) ProtoMessage() {}

func (x *Attr) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr.ProtoReflect.Descriptor instead.
func (*Attr) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{4}
}

func (x *Attr) GetDefault() *Value {
	if x != nil {
		return x.Default
	}
	return nil
}

func (x *Attr) GetType() isAttr_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Attr) GetBool() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Type.(*Attr_Bool); ok {
			return x.Bool
		}
	}
	return nil
}

func (x *Attr) GetInt() *Attr_IntType {
	if x != nil {
		if x, ok := x.Type.(*Attr_Int); ok {
			return x.Int
		}
	}
	return nil
}

func (x *Attr) GetIntList() *Attr_IntListType {
	if x != nil {
		if x, ok := x.Type.(*Attr_IntList); ok {
			return x.IntList
		}
	}
	return nil
}

func (x *Attr) GetLabel() *Attr_LabelType {
	if x != nil {
		if x, ok := x.Type.(*Attr_Label); ok {
			return x.Label
		}
	}
	return nil
}

func (x *Attr) GetLabelKeyedStringDict() *Attr_LabelKeyedStringDictType {
	if x != nil {
		if x, ok := x.Type.(*Attr_LabelKeyedStringDict); ok {
			return x.LabelKeyedStringDict
		}
	}
	return nil
}

func (x *Attr) GetLabelList() *Attr_LabelListType {
	if x != nil {
		if x, ok := x.Type.(*Attr_LabelList); ok {
			return x.LabelList
		}
	}
	return nil
}

func (x *Attr) GetOutput() *Attr_OutputType {
	if x != nil {
		if x, ok := x.Type.(*Attr_Output); ok {
			return x.Output
		}
	}
	return nil
}

func (x *Attr) GetOutputList() *Attr_OutputListType {
	if x != nil {
		if x, ok := x.Type.(*Attr_OutputList); ok {
			return x.OutputList
		}
	}
	return nil
}

func (x *Attr) GetString_() *Attr_StringType {
	if x != nil {
		if x, ok := x.Type.(*Attr_String_); ok {
			return x.String_
		}
	}
	return nil
}

func (x *Attr) GetStringDict() *Attr_StringDictType {
	if x != nil {
		if x, ok := x.Type.(*Attr_StringDict); ok {
			return x.StringDict
		}
	}
	return nil
}

func (x *Attr) GetStringList() *Attr_StringListType {
	if x != nil {
		if x, ok := x.Type.(*Attr_StringList); ok {
			return x.StringList
		}
	}
	return nil
}

func (x *Attr) GetStringListDict() *Attr_StringListDictType {
	if x != nil {
		if x, ok := x.Type.(*Attr_StringListDict); ok {
			return x.StringListDict
		}
	}
	return nil
}

type isAttr_Type interface {
	isAttr_Type()
}

type Attr_Bool struct {
	Bool *emptypb.Empty `protobuf:"bytes,2,opt,name=bool,proto3,oneof"`
}

type Attr_Int struct {
	Int *Attr_IntType `protobuf:"bytes,3,opt,name=int,proto3,oneof"`
}

type Attr_IntList struct {
	IntList *Attr_IntListType `protobuf:"bytes,4,opt,name=int_list,json=intList,proto3,oneof"`
}

type Attr_Label struct {
	Label *Attr_LabelType `protobuf:"bytes,5,opt,name=label,proto3,oneof"`
}

type Attr_LabelKeyedStringDict struct {
	LabelKeyedStringDict *Attr_LabelKeyedStringDictType `protobuf:"bytes,6,opt,name=label_keyed_string_dict,json=labelKeyedStringDict,proto3,oneof"`
}

type Attr_LabelList struct {
	LabelList *Attr_LabelListType `protobuf:"bytes,7,opt,name=label_list,json=labelList,proto3,oneof"`
}

type Attr_Output struct {
	Output *Attr_OutputType `protobuf:"bytes,8,opt,name=output,proto3,oneof"`
}

type Attr_OutputList struct {
	OutputList *Attr_OutputListType `protobuf:"bytes,9,opt,name=output_list,json=outputList,proto3,oneof"`
}

type Attr_String_ struct {
	String_ *Attr_StringType `protobuf:"bytes,10,opt,name=string,proto3,oneof"`
}

type Attr_StringDict struct {
	StringDict *Attr_StringDictType `protobuf:"bytes,11,opt,name=string_dict,json=stringDict,proto3,oneof"`
}

type Attr_StringList struct {
	StringList *Attr_StringListType `protobuf:"bytes,12,opt,name=string_list,json=stringList,proto3,oneof"`
}

type Attr_StringListDict struct {
	StringListDict *Attr_StringListDictType `protobuf:"bytes,13,opt,name=string_list_dict,json=stringListDict,proto3,oneof"`
}

func (*Attr_Bool) isAttr_Type() {}

func (*Attr_Int) isAttr_Type() {}

func (*Attr_IntList) isAttr_Type() {}

func (*Attr_Label) isAttr_Type() {}

func (*Attr_LabelKeyedStringDict) isAttr_Type() {}

func (*Attr_LabelList) isAttr_Type() {}

func (*Attr_Output) isAttr_Type() {}

func (*Attr_OutputList) isAttr_Type() {}

func (*Attr_String_) isAttr_Type() {}

func (*Attr_StringDict) isAttr_Type() {}

func (*Attr_StringList) isAttr_Type() {}

func (*Attr_StringListDict) isAttr_Type() {}

type BuildSetting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Flag  bool                   `protobuf:"varint,1,opt,name=flag,proto3" json:"flag,omitempty"`
	// Types that are valid to be assigned to Type:
	//
	//	*BuildSetting_Bool
	//	*BuildSetting_Int
	//	*BuildSetting_LabelList
	//	*BuildSetting_String_
	//	*BuildSetting_StringList
	Type          isBuildSetting_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildSetting) Reset() {
	*x = BuildSetting{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildSetting) ProtoMessage() {}

func (x *BuildSetting) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildSetting.ProtoReflect.Descriptor instead.
func (*BuildSetting) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{5}
}

func (x *BuildSetting) GetFlag() bool {
	if x != nil {
		return x.Flag
	}
	return false
}

func (x *BuildSetting) GetType() isBuildSetting_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *BuildSetting) GetBool() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Type.(*BuildSetting_Bool); ok {
			return x.Bool
		}
	}
	return nil
}

func (x *BuildSetting) GetInt() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Type.(*BuildSetting_Int); ok {
			return x.Int
		}
	}
	return nil
}

func (x *BuildSetting) GetLabelList() *BuildSetting_ListType {
	if x != nil {
		if x, ok := x.Type.(*BuildSetting_LabelList); ok {
			return x.LabelList
		}
	}
	return nil
}

func (x *BuildSetting) GetString_() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Type.(*BuildSetting_String_); ok {
			return x.String_
		}
	}
	return nil
}

func (x *BuildSetting) GetStringList() *BuildSetting_ListType {
	if x != nil {
		if x, ok := x.Type.(*BuildSetting_StringList); ok {
			return x.StringList
		}
	}
	return nil
}

type isBuildSetting_Type interface {
	isBuildSetting_Type()
}

type BuildSetting_Bool struct {
	Bool *emptypb.Empty `protobuf:"bytes,2,opt,name=bool,proto3,oneof"`
}

type BuildSetting_Int struct {
	Int *emptypb.Empty `protobuf:"bytes,3,opt,name=int,proto3,oneof"`
}

type BuildSetting_LabelList struct {
	LabelList *BuildSetting_ListType `protobuf:"bytes,4,opt,name=label_list,json=labelList,proto3,oneof"`
}

type BuildSetting_String_ struct {
	String_ *emptypb.Empty `protobuf:"bytes,5,opt,name=string,proto3,oneof"`
}

type BuildSetting_StringList struct {
	StringList *BuildSetting_ListType `protobuf:"bytes,6,opt,name=string_list,json=stringList,proto3,oneof"`
}

func (*BuildSetting_Bool) isBuildSetting_Type() {}

func (*BuildSetting_Int) isBuildSetting_Type() {}

func (*BuildSetting_LabelList) isBuildSetting_Type() {}

func (*BuildSetting_String_) isBuildSetting_Type() {}

func (*BuildSetting_StringList) isBuildSetting_Type() {}

type Depset struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Elements      []*List_Element        `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	Order         Depset_Order           `protobuf:"varint,2,opt,name=order,proto3,enum=bonanza.model.starlark.Depset_Order" json:"order,omitempty"`
	Identifier    []byte                 `protobuf:"bytes,3,opt,name=identifier,proto3" json:"identifier,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Depset) Reset() {
	*x = Depset{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Depset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Depset) ProtoMessage() {}

func (x *Depset) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Depset.ProtoReflect.Descriptor instead.
func (*Depset) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{6}
}

func (x *Depset) GetElements() []*List_Element {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *Depset) GetOrder() Depset_Order {
	if x != nil {
		return x.Order
	}
	return Depset_DEFAULT
}

func (x *Depset) GetIdentifier() []byte {
	if x != nil {
		return x.Identifier
	}
	return nil
}

type Dict struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*Dict_Entry          `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dict) Reset() {
	*x = Dict{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dict) ProtoMessage() {}

func (x *Dict) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dict.ProtoReflect.Descriptor instead.
func (*Dict) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{7}
}

func (x *Dict) GetEntries() []*Dict_Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ExecGroup struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ExecCompatibleWith []string               `protobuf:"bytes,1,rep,name=exec_compatible_with,json=execCompatibleWith,proto3" json:"exec_compatible_with,omitempty"`
	Toolchains         []*ToolchainType       `protobuf:"bytes,2,rep,name=toolchains,proto3" json:"toolchains,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ExecGroup) Reset() {
	*x = ExecGroup{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecGroup) ProtoMessage() {}

func (x *ExecGroup) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecGroup.ProtoReflect.Descriptor instead.
func (*ExecGroup) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{8}
}

func (x *ExecGroup) GetExecCompatibleWith() []string {
	if x != nil {
		return x.ExecCompatibleWith
	}
	return nil
}

func (x *ExecGroup) GetToolchains() []*ToolchainType {
	if x != nil {
		return x.Toolchains
	}
	return nil
}

type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         *File_Owner            `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{9}
}

func (x *File) GetOwner() *File_Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *File) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type Function struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Line          int32                  `protobuf:"varint,2,opt,name=line,proto3" json:"line,omitempty"`
	Column        int32                  `protobuf:"varint,3,opt,name=column,proto3" json:"column,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Closure       *Function_Closure      `protobuf:"bytes,5,opt,name=closure,proto3" json:"closure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Function) Reset() {
	*x = Function{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Function) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Function) ProtoMessage() {}

func (x *Function) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Function.ProtoReflect.Descriptor instead.
func (*Function) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{10}
}

func (x *Function) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Function) GetLine() int32 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *Function) GetColumn() int32 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *Function) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Function) GetClosure() *Function_Closure {
	if x != nil {
		return x.Closure
	}
	return nil
}

type InheritableAttrs struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Deprecation     string                 `protobuf:"bytes,1,opt,name=deprecation,proto3" json:"deprecation,omitempty"`
	PackageMetadata []string               `protobuf:"bytes,2,rep,name=package_metadata,json=packageMetadata,proto3" json:"package_metadata,omitempty"`
	Testonly        bool                   `protobuf:"varint,3,opt,name=testonly,proto3" json:"testonly,omitempty"`
	Visibility      *PackageGroup          `protobuf:"bytes,4,opt,name=visibility,proto3" json:"visibility,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InheritableAttrs) Reset() {
	*x = InheritableAttrs{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InheritableAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InheritableAttrs) ProtoMessage() {}

func (x *InheritableAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InheritableAttrs.ProtoReflect.Descriptor instead.
func (*InheritableAttrs) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{11}
}

func (x *InheritableAttrs) GetDeprecation() string {
	if x != nil {
		return x.Deprecation
	}
	return ""
}

func (x *InheritableAttrs) GetPackageMetadata() []string {
	if x != nil {
		return x.PackageMetadata
	}
	return nil
}

func (x *InheritableAttrs) GetTestonly() bool {
	if x != nil {
		return x.Testonly
	}
	return false
}

func (x *InheritableAttrs) GetVisibility() *PackageGroup {
	if x != nil {
		return x.Visibility
	}
	return nil
}

type Int struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AbsoluteValue []byte                 `protobuf:"bytes,1,opt,name=absolute_value,json=absoluteValue,proto3" json:"absolute_value,omitempty"`
	Negative      bool                   `protobuf:"varint,2,opt,name=negative,proto3" json:"negative,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Int) Reset() {
	*x = Int{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Int) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int) ProtoMessage() {}

func (x *Int) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int.ProtoReflect.Descriptor instead.
func (*Int) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{12}
}

func (x *Int) GetAbsoluteValue() []byte {
	if x != nil {
		return x.AbsoluteValue
	}
	return nil
}

func (x *Int) GetNegative() bool {
	if x != nil {
		return x.Negative
	}
	return false
}

type LabelSetting struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	BuildSettingDefault string                 `protobuf:"bytes,1,opt,name=build_setting_default,json=buildSettingDefault,proto3" json:"build_setting_default,omitempty"`
	Flag                bool                   `protobuf:"varint,2,opt,name=flag,proto3" json:"flag,omitempty"`
	SingletonList       bool                   `protobuf:"varint,3,opt,name=singleton_list,json=singletonList,proto3" json:"singleton_list,omitempty"`
	Visibility          *PackageGroup          `protobuf:"bytes,4,opt,name=visibility,proto3" json:"visibility,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *LabelSetting) Reset() {
	*x = LabelSetting{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelSetting) ProtoMessage() {}

func (x *LabelSetting) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelSetting.ProtoReflect.Descriptor instead.
func (*LabelSetting) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{13}
}

func (x *LabelSetting) GetBuildSettingDefault() string {
	if x != nil {
		return x.BuildSettingDefault
	}
	return ""
}

func (x *LabelSetting) GetFlag() bool {
	if x != nil {
		return x.Flag
	}
	return false
}

func (x *LabelSetting) GetSingletonList() bool {
	if x != nil {
		return x.SingletonList
	}
	return false
}

func (x *LabelSetting) GetVisibility() *PackageGroup {
	if x != nil {
		return x.Visibility
	}
	return nil
}

type List struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Elements      []*List_Element        `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *List) Reset() {
	*x = List{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{14}
}

func (x *List) GetElements() []*List_Element {
	if x != nil {
		return x.Elements
	}
	return nil
}

type ModuleExtension struct {
	state          protoimpl.MessageState           `protogen:"open.v1"`
	Implementation *Function                        `protobuf:"bytes,1,opt,name=implementation,proto3" json:"implementation,omitempty"`
	TagClasses     []*ModuleExtension_NamedTagClass `protobuf:"bytes,2,rep,name=tag_classes,json=tagClasses,proto3" json:"tag_classes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ModuleExtension) Reset() {
	*x = ModuleExtension{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModuleExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleExtension) ProtoMessage() {}

func (x *ModuleExtension) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleExtension.ProtoReflect.Descriptor instead.
func (*ModuleExtension) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{15}
}

func (x *ModuleExtension) GetImplementation() *Function {
	if x != nil {
		return x.Implementation
	}
	return nil
}

func (x *ModuleExtension) GetTagClasses() []*ModuleExtension_NamedTagClass {
	if x != nil {
		return x.TagClasses
	}
	return nil
}

type PredeclaredOutputFileTarget struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OwnerTargetName string                 `protobuf:"bytes,1,opt,name=owner_target_name,json=ownerTargetName,proto3" json:"owner_target_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PredeclaredOutputFileTarget) Reset() {
	*x = PredeclaredOutputFileTarget{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PredeclaredOutputFileTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredeclaredOutputFileTarget) ProtoMessage() {}

func (x *PredeclaredOutputFileTarget) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredeclaredOutputFileTarget.ProtoReflect.Descriptor instead.
func (*PredeclaredOutputFileTarget) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{16}
}

func (x *PredeclaredOutputFileTarget) GetOwnerTargetName() string {
	if x != nil {
		return x.OwnerTargetName
	}
	return ""
}

type PackageGroup struct {
	state                protoimpl.MessageState    `protogen:"open.v1"`
	Tree                 *PackageGroup_Subpackages `protobuf:"bytes,1,opt,name=tree,proto3" json:"tree,omitempty"`
	IncludePackageGroups []string                  `protobuf:"bytes,2,rep,name=include_package_groups,json=includePackageGroups,proto3" json:"include_package_groups,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PackageGroup) Reset() {
	*x = PackageGroup{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackageGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageGroup) ProtoMessage() {}

func (x *PackageGroup) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageGroup.ProtoReflect.Descriptor instead.
func (*PackageGroup) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{17}
}

func (x *PackageGroup) GetTree() *PackageGroup_Subpackages {
	if x != nil {
		return x.Tree
	}
	return nil
}

func (x *PackageGroup) GetIncludePackageGroups() []string {
	if x != nil {
		return x.IncludePackageGroups
	}
	return nil
}

type Provider struct {
	state              protoimpl.MessageState       `protogen:"open.v1"`
	InstanceProperties *Provider_InstanceProperties `protobuf:"bytes,1,opt,name=instance_properties,json=instanceProperties,proto3" json:"instance_properties,omitempty"`
	InitFunction       *Function                    `protobuf:"bytes,2,opt,name=init_function,json=initFunction,proto3" json:"init_function,omitempty"`
	Fields             []string                     `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Provider) Reset() {
	*x = Provider{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider) ProtoMessage() {}

func (x *Provider) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider.ProtoReflect.Descriptor instead.
func (*Provider) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{18}
}

func (x *Provider) GetInstanceProperties() *Provider_InstanceProperties {
	if x != nil {
		return x.InstanceProperties
	}
	return nil
}

func (x *Provider) GetInitFunction() *Function {
	if x != nil {
		return x.InitFunction
	}
	return nil
}

func (x *Provider) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Struct struct {
	state                      protoimpl.MessageState       `protogen:"open.v1"`
	Fields                     *Struct_Fields               `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
	ProviderInstanceProperties *Provider_InstanceProperties `protobuf:"bytes,2,opt,name=provider_instance_properties,json=providerInstanceProperties,proto3" json:"provider_instance_properties,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *Struct) Reset() {
	*x = Struct{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Struct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Struct) ProtoMessage() {}

func (x *Struct) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Struct.ProtoReflect.Descriptor instead.
func (*Struct) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{19}
}

func (x *Struct) GetFields() *Struct_Fields {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Struct) GetProviderInstanceProperties() *Provider_InstanceProperties {
	if x != nil {
		return x.ProviderInstanceProperties
	}
	return nil
}

type TagClass struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Attrs         []*NamedAttr           `protobuf:"bytes,1,rep,name=attrs,proto3" json:"attrs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagClass) Reset() {
	*x = TagClass{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagClass) ProtoMessage() {}

func (x *TagClass) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagClass.ProtoReflect.Descriptor instead.
func (*TagClass) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{20}
}

func (x *TagClass) GetAttrs() []*NamedAttr {
	if x != nil {
		return x.Attrs
	}
	return nil
}

type TargetReference struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	OriginalLabel string                      `protobuf:"bytes,1,opt,name=original_label,json=originalLabel,proto3" json:"original_label,omitempty"`
	Configured    *TargetReference_Configured `protobuf:"bytes,2,opt,name=configured,proto3" json:"configured,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TargetReference) Reset() {
	*x = TargetReference{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TargetReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetReference) ProtoMessage() {}

func (x *TargetReference) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetReference.ProtoReflect.Descriptor instead.
func (*TargetReference) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{21}
}

func (x *TargetReference) GetOriginalLabel() string {
	if x != nil {
		return x.OriginalLabel
	}
	return ""
}

func (x *TargetReference) GetConfigured() *TargetReference_Configured {
	if x != nil {
		return x.Configured
	}
	return nil
}

type ToolchainType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ToolchainType string                 `protobuf:"bytes,1,opt,name=toolchain_type,json=toolchainType,proto3" json:"toolchain_type,omitempty"`
	Mandatory     bool                   `protobuf:"varint,2,opt,name=mandatory,proto3" json:"mandatory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolchainType) Reset() {
	*x = ToolchainType{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolchainType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolchainType) ProtoMessage() {}

func (x *ToolchainType) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolchainType.ProtoReflect.Descriptor instead.
func (*ToolchainType) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{22}
}

func (x *ToolchainType) GetToolchainType() string {
	if x != nil {
		return x.ToolchainType
	}
	return ""
}

func (x *ToolchainType) GetMandatory() bool {
	if x != nil {
		return x.Mandatory
	}
	return false
}

type Tuple struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Elements      []*Value               `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tuple) Reset() {
	*x = Tuple{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tuple) ProtoMessage() {}

func (x *Tuple) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tuple.ProtoReflect.Descriptor instead.
func (*Tuple) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{23}
}

func (x *Tuple) GetElements() []*Value {
	if x != nil {
		return x.Elements
	}
	return nil
}

type NamedAttr struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Attr          *Attr                  `protobuf:"bytes,2,opt,name=attr,proto3" json:"attr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamedAttr) Reset() {
	*x = NamedAttr{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamedAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedAttr) ProtoMessage() {}

func (x *NamedAttr) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedAttr.ProtoReflect.Descriptor instead.
func (*NamedAttr) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{24}
}

func (x *NamedAttr) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NamedAttr) GetAttr() *Attr {
	if x != nil {
		return x.Attr
	}
	return nil
}

type NamedExecGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ExecGroup     *ExecGroup             `protobuf:"bytes,2,opt,name=exec_group,json=execGroup,proto3" json:"exec_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamedExecGroup) Reset() {
	*x = NamedExecGroup{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamedExecGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedExecGroup) ProtoMessage() {}

func (x *NamedExecGroup) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedExecGroup.ProtoReflect.Descriptor instead.
func (*NamedExecGroup) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{25}
}

func (x *NamedExecGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NamedExecGroup) GetExecGroup() *ExecGroup {
	if x != nil {
		return x.ExecGroup
	}
	return nil
}

type Repo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Definition    *Repo_Definition       `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Repo) Reset() {
	*x = Repo{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Repo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repo) ProtoMessage() {}

func (x *Repo) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repo.ProtoReflect.Descriptor instead.
func (*Repo) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{26}
}

func (x *Repo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Repo) GetDefinition() *Repo_Definition {
	if x != nil {
		return x.Definition
	}
	return nil
}

type RepositoryRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*RepositoryRule_Reference
	//	*RepositoryRule_Definition_
	Kind          isRepositoryRule_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepositoryRule) Reset() {
	*x = RepositoryRule{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositoryRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryRule) ProtoMessage() {}

func (x *RepositoryRule) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryRule.ProtoReflect.Descriptor instead.
func (*RepositoryRule) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{27}
}

func (x *RepositoryRule) GetKind() isRepositoryRule_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *RepositoryRule) GetReference() string {
	if x != nil {
		if x, ok := x.Kind.(*RepositoryRule_Reference); ok {
			return x.Reference
		}
	}
	return ""
}

func (x *RepositoryRule) GetDefinition() *RepositoryRule_Definition {
	if x != nil {
		if x, ok := x.Kind.(*RepositoryRule_Definition_); ok {
			return x.Definition
		}
	}
	return nil
}

type isRepositoryRule_Kind interface {
	isRepositoryRule_Kind()
}

type RepositoryRule_Reference struct {
	Reference string `protobuf:"bytes,1,opt,name=reference,proto3,oneof"`
}

type RepositoryRule_Definition_ struct {
	Definition *RepositoryRule_Definition `protobuf:"bytes,2,opt,name=definition,proto3,oneof"`
}

func (*RepositoryRule_Reference) isRepositoryRule_Kind() {}

func (*RepositoryRule_Definition_) isRepositoryRule_Kind() {}

type Rule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*Rule_Reference
	//	*Rule_Definition_
	Kind          isRule_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rule) Reset() {
	*x = Rule{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{28}
}

func (x *Rule) GetKind() isRule_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Rule) GetReference() string {
	if x != nil {
		if x, ok := x.Kind.(*Rule_Reference); ok {
			return x.Reference
		}
	}
	return ""
}

func (x *Rule) GetDefinition() *Rule_Definition {
	if x != nil {
		if x, ok := x.Kind.(*Rule_Definition_); ok {
			return x.Definition
		}
	}
	return nil
}

type isRule_Kind interface {
	isRule_Kind()
}

type Rule_Reference struct {
	Reference string `protobuf:"bytes,1,opt,name=reference,proto3,oneof"`
}

type Rule_Definition_ struct {
	Definition *Rule_Definition `protobuf:"bytes,2,opt,name=definition,proto3,oneof"`
}

func (*Rule_Reference) isRule_Kind() {}

func (*Rule_Definition_) isRule_Kind() {}

type RuleTarget struct {
	state                protoimpl.MessageState        `protogen:"open.v1"`
	RuleIdentifier       string                        `protobuf:"bytes,1,opt,name=rule_identifier,json=ruleIdentifier,proto3" json:"rule_identifier,omitempty"`
	PublicAttrValues     []*RuleTarget_PublicAttrValue `protobuf:"bytes,2,rep,name=public_attr_values,json=publicAttrValues,proto3" json:"public_attr_values,omitempty"`
	ExecCompatibleWith   []string                      `protobuf:"bytes,3,rep,name=exec_compatible_with,json=execCompatibleWith,proto3" json:"exec_compatible_with,omitempty"`
	Tags                 []string                      `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	TargetCompatibleWith []*Select_Group               `protobuf:"bytes,5,rep,name=target_compatible_with,json=targetCompatibleWith,proto3" json:"target_compatible_with,omitempty"`
	InheritableAttrs     *InheritableAttrs             `protobuf:"bytes,6,opt,name=inheritable_attrs,json=inheritableAttrs,proto3" json:"inheritable_attrs,omitempty"`
	BuildSettingDefault  *Value                        `protobuf:"bytes,7,opt,name=build_setting_default,json=buildSettingDefault,proto3" json:"build_setting_default,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RuleTarget) Reset() {
	*x = RuleTarget{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleTarget) ProtoMessage() {}

func (x *RuleTarget) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleTarget.ProtoReflect.Descriptor instead.
func (*RuleTarget) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{29}
}

func (x *RuleTarget) GetRuleIdentifier() string {
	if x != nil {
		return x.RuleIdentifier
	}
	return ""
}

func (x *RuleTarget) GetPublicAttrValues() []*RuleTarget_PublicAttrValue {
	if x != nil {
		return x.PublicAttrValues
	}
	return nil
}

func (x *RuleTarget) GetExecCompatibleWith() []string {
	if x != nil {
		return x.ExecCompatibleWith
	}
	return nil
}

func (x *RuleTarget) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *RuleTarget) GetTargetCompatibleWith() []*Select_Group {
	if x != nil {
		return x.TargetCompatibleWith
	}
	return nil
}

func (x *RuleTarget) GetInheritableAttrs() *InheritableAttrs {
	if x != nil {
		return x.InheritableAttrs
	}
	return nil
}

func (x *RuleTarget) GetBuildSettingDefault() *Value {
	if x != nil {
		return x.BuildSettingDefault
	}
	return nil
}

type Select struct {
	state                 protoimpl.MessageState       `protogen:"open.v1"`
	Groups                []*Select_Group              `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	ConcatenationOperator Select_ConcatenationOperator `protobuf:"varint,2,opt,name=concatenation_operator,json=concatenationOperator,proto3,enum=bonanza.model.starlark.Select_ConcatenationOperator" json:"concatenation_operator,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Select) Reset() {
	*x = Select{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Select) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Select) ProtoMessage() {}

func (x *Select) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Select.ProtoReflect.Descriptor instead.
func (*Select) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{30}
}

func (x *Select) GetGroups() []*Select_Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *Select) GetConcatenationOperator() Select_ConcatenationOperator {
	if x != nil {
		return x.ConcatenationOperator
	}
	return Select_NONE
}

type Set struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Elements      []*List_Element        `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Set) Reset() {
	*x = Set{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Set) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Set) ProtoMessage() {}

func (x *Set) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Set.ProtoReflect.Descriptor instead.
func (*Set) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{31}
}

func (x *Set) GetElements() []*List_Element {
	if x != nil {
		return x.Elements
	}
	return nil
}

type SourceFileTarget struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Visibility    *PackageGroup          `protobuf:"bytes,4,opt,name=visibility,proto3" json:"visibility,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceFileTarget) Reset() {
	*x = SourceFileTarget{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceFileTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceFileTarget) ProtoMessage() {}

func (x *SourceFileTarget) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceFileTarget.ProtoReflect.Descriptor instead.
func (*SourceFileTarget) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{32}
}

func (x *SourceFileTarget) GetVisibility() *PackageGroup {
	if x != nil {
		return x.Visibility
	}
	return nil
}

type Subrule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*Subrule_Reference
	//	*Subrule_Definition_
	Kind          isSubrule_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subrule) Reset() {
	*x = Subrule{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subrule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subrule) ProtoMessage() {}

func (x *Subrule) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subrule.ProtoReflect.Descriptor instead.
func (*Subrule) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{33}
}

func (x *Subrule) GetKind() isSubrule_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Subrule) GetReference() string {
	if x != nil {
		if x, ok := x.Kind.(*Subrule_Reference); ok {
			return x.Reference
		}
	}
	return ""
}

func (x *Subrule) GetDefinition() *Subrule_Definition {
	if x != nil {
		if x, ok := x.Kind.(*Subrule_Definition_); ok {
			return x.Definition
		}
	}
	return nil
}

type isSubrule_Kind interface {
	isSubrule_Kind()
}

type Subrule_Reference struct {
	Reference string `protobuf:"bytes,1,opt,name=reference,proto3,oneof"`
}

type Subrule_Definition_ struct {
	Definition *Subrule_Definition `protobuf:"bytes,2,opt,name=definition,proto3,oneof"`
}

func (*Subrule_Reference) isSubrule_Kind() {}

func (*Subrule_Definition_) isSubrule_Kind() {}

type Target struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Definition    *Target_Definition     `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Target) Reset() {
	*x = Target{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{34}
}

func (x *Target) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Target) GetDefinition() *Target_Definition {
	if x != nil {
		return x.Definition
	}
	return nil
}

type Transition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*Transition_ExecGroup
	//	*Transition_None
	//	*Transition_Target
	//	*Transition_UserDefined_
	//	*Transition_Unconfigured
	Kind          isTransition_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transition) Reset() {
	*x = Transition{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transition) ProtoMessage() {}

func (x *Transition) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transition.ProtoReflect.Descriptor instead.
func (*Transition) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{35}
}

func (x *Transition) GetKind() isTransition_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Transition) GetExecGroup() string {
	if x != nil {
		if x, ok := x.Kind.(*Transition_ExecGroup); ok {
			return x.ExecGroup
		}
	}
	return ""
}

func (x *Transition) GetNone() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Kind.(*Transition_None); ok {
			return x.None
		}
	}
	return nil
}

func (x *Transition) GetTarget() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Kind.(*Transition_Target); ok {
			return x.Target
		}
	}
	return nil
}

func (x *Transition) GetUserDefined() *Transition_UserDefined {
	if x != nil {
		if x, ok := x.Kind.(*Transition_UserDefined_); ok {
			return x.UserDefined
		}
	}
	return nil
}

func (x *Transition) GetUnconfigured() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Kind.(*Transition_Unconfigured); ok {
			return x.Unconfigured
		}
	}
	return nil
}

type isTransition_Kind interface {
	isTransition_Kind()
}

type Transition_ExecGroup struct {
	ExecGroup string `protobuf:"bytes,1,opt,name=exec_group,json=execGroup,proto3,oneof"`
}

type Transition_None struct {
	None *emptypb.Empty `protobuf:"bytes,2,opt,name=none,proto3,oneof"`
}

type Transition_Target struct {
	Target *emptypb.Empty `protobuf:"bytes,3,opt,name=target,proto3,oneof"`
}

type Transition_UserDefined_ struct {
	UserDefined *Transition_UserDefined `protobuf:"bytes,4,opt,name=user_defined,json=userDefined,proto3,oneof"`
}

type Transition_Unconfigured struct {
	Unconfigured *emptypb.Empty `protobuf:"bytes,5,opt,name=unconfigured,proto3,oneof"`
}

func (*Transition_ExecGroup) isTransition_Kind() {}

func (*Transition_None) isTransition_Kind() {}

func (*Transition_Target) isTransition_Kind() {}

func (*Transition_UserDefined_) isTransition_Kind() {}

func (*Transition_Unconfigured) isTransition_Kind() {}

type Aspect_Definition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Aspect_Definition) Reset() {
	*x = Aspect_Definition{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Aspect_Definition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aspect_Definition) ProtoMessage() {}

func (x *Aspect_Definition) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aspect_Definition.ProtoReflect.Descriptor instead.
func (*Aspect_Definition) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{3, 0}
}

type Attr_LabelOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Providers     []string               `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"`
	Aspects       []string               `protobuf:"bytes,2,rep,name=aspects,proto3" json:"aspects,omitempty"`
	Cfg           *Transition            `protobuf:"bytes,3,opt,name=cfg,proto3" json:"cfg,omitempty"`
	AllowFiles    []byte                 `protobuf:"bytes,4,opt,name=allow_files,json=allowFiles,proto3" json:"allow_files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attr_LabelOptions) Reset() {
	*x = Attr_LabelOptions{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attr_LabelOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr_LabelOptions) ProtoMessage() {}

func (x *Attr_LabelOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr_LabelOptions.ProtoReflect.Descriptor instead.
func (*Attr_LabelOptions) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Attr_LabelOptions) GetProviders() []string {
	if x != nil {
		return x.Providers
	}
	return nil
}

func (x *Attr_LabelOptions) GetAspects() []string {
	if x != nil {
		return x.Aspects
	}
	return nil
}

func (x *Attr_LabelOptions) GetCfg() *Transition {
	if x != nil {
		return x.Cfg
	}
	return nil
}

func (x *Attr_LabelOptions) GetAllowFiles() []byte {
	if x != nil {
		return x.AllowFiles
	}
	return nil
}

type Attr_CompositeOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AllowEmpty    bool                   `protobuf:"varint,1,opt,name=allow_empty,json=allowEmpty,proto3" json:"allow_empty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attr_CompositeOptions) Reset() {
	*x = Attr_CompositeOptions{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attr_CompositeOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr_CompositeOptions) ProtoMessage() {}

func (x *Attr_CompositeOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr_CompositeOptions.ProtoReflect.Descriptor instead.
func (*Attr_CompositeOptions) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Attr_CompositeOptions) GetAllowEmpty() bool {
	if x != nil {
		return x.AllowEmpty
	}
	return false
}

type Attr_IntType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []int32                `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attr_IntType) Reset() {
	*x = Attr_IntType{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attr_IntType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr_IntType) ProtoMessage() {}

func (x *Attr_IntType) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr_IntType.ProtoReflect.Descriptor instead.
func (*Attr_IntType) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{4, 2}
}

func (x *Attr_IntType) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

type Attr_IntListType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ListOptions   *Attr_CompositeOptions `protobuf:"bytes,1,opt,name=list_options,json=listOptions,proto3" json:"list_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attr_IntListType) Reset() {
	*x = Attr_IntListType{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attr_IntListType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr_IntListType) ProtoMessage() {}

func (x *Attr_IntListType) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr_IntListType.ProtoReflect.Descriptor instead.
func (*Attr_IntListType) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{4, 3}
}

func (x *Attr_IntListType) GetListOptions() *Attr_CompositeOptions {
	if x != nil {
		return x.ListOptions
	}
	return nil
}

type Attr_LabelType struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ValueOptions    *Attr_LabelOptions     `protobuf:"bytes,1,opt,name=value_options,json=valueOptions,proto3" json:"value_options,omitempty"`
	AllowNone       bool                   `protobuf:"varint,2,opt,name=allow_none,json=allowNone,proto3" json:"allow_none,omitempty"`
	AllowSingleFile bool                   `protobuf:"varint,3,opt,name=allow_single_file,json=allowSingleFile,proto3" json:"allow_single_file,omitempty"`
	Executable      bool                   `protobuf:"varint,4,opt,name=executable,proto3" json:"executable,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Attr_LabelType) Reset() {
	*x = Attr_LabelType{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attr_LabelType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr_LabelType) ProtoMessage() {}

func (x *Attr_LabelType) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr_LabelType.ProtoReflect.Descriptor instead.
func (*Attr_LabelType) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{4, 4}
}

func (x *Attr_LabelType) GetValueOptions() *Attr_LabelOptions {
	if x != nil {
		return x.ValueOptions
	}
	return nil
}

func (x *Attr_LabelType) GetAllowNone() bool {
	if x != nil {
		return x.AllowNone
	}
	return false
}

func (x *Attr_LabelType) GetAllowSingleFile() bool {
	if x != nil {
		return x.AllowSingleFile
	}
	return false
}

func (x *Attr_LabelType) GetExecutable() bool {
	if x != nil {
		return x.Executable
	}
	return false
}

type Attr_LabelKeyedStringDictType struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DictOptions    *Attr_CompositeOptions `protobuf:"bytes,1,opt,name=dict_options,json=dictOptions,proto3" json:"dict_options,omitempty"`
	DictKeyOptions *Attr_LabelOptions     `protobuf:"bytes,2,opt,name=dict_key_options,json=dictKeyOptions,proto3" json:"dict_key_options,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Attr_LabelKeyedStringDictType) Reset() {
	*x = Attr_LabelKeyedStringDictType{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attr_LabelKeyedStringDictType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr_LabelKeyedStringDictType) ProtoMessage() {}

func (x *Attr_LabelKeyedStringDictType) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr_LabelKeyedStringDictType.ProtoReflect.Descriptor instead.
func (*Attr_LabelKeyedStringDictType) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{4, 5}
}

func (x *Attr_LabelKeyedStringDictType) GetDictOptions() *Attr_CompositeOptions {
	if x != nil {
		return x.DictOptions
	}
	return nil
}

func (x *Attr_LabelKeyedStringDictType) GetDictKeyOptions() *Attr_LabelOptions {
	if x != nil {
		return x.DictKeyOptions
	}
	return nil
}

type Attr_LabelListType struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ListOptions      *Attr_CompositeOptions `protobuf:"bytes,1,opt,name=list_options,json=listOptions,proto3" json:"list_options,omitempty"`
	ListValueOptions *Attr_LabelOptions     `protobuf:"bytes,2,opt,name=list_value_options,json=listValueOptions,proto3" json:"list_value_options,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Attr_LabelListType) Reset() {
	*x = Attr_LabelListType{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attr_LabelListType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr_LabelListType) ProtoMessage() {}

func (x *Attr_LabelListType) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr_LabelListType.ProtoReflect.Descriptor instead.
func (*Attr_LabelListType) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{4, 6}
}

func (x *Attr_LabelListType) GetListOptions() *Attr_CompositeOptions {
	if x != nil {
		return x.ListOptions
	}
	return nil
}

func (x *Attr_LabelListType) GetListValueOptions() *Attr_LabelOptions {
	if x != nil {
		return x.ListValueOptions
	}
	return nil
}

type Attr_OutputType struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	FilenameTemplate string                 `protobuf:"bytes,1,opt,name=filename_template,json=filenameTemplate,proto3" json:"filename_template,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Attr_OutputType) Reset() {
	*x = Attr_OutputType{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attr_OutputType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr_OutputType) ProtoMessage() {}

func (x *Attr_OutputType) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr_OutputType.ProtoReflect.Descriptor instead.
func (*Attr_OutputType) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{4, 7}
}

func (x *Attr_OutputType) GetFilenameTemplate() string {
	if x != nil {
		return x.FilenameTemplate
	}
	return ""
}

type Attr_OutputListType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ListOptions   *Attr_CompositeOptions `protobuf:"bytes,1,opt,name=list_options,json=listOptions,proto3" json:"list_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attr_OutputListType) Reset() {
	*x = Attr_OutputListType{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attr_OutputListType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr_OutputListType) ProtoMessage() {}

func (x *Attr_OutputListType) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr_OutputListType.ProtoReflect.Descriptor instead.
func (*Attr_OutputListType) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{4, 8}
}

func (x *Attr_OutputListType) GetListOptions() *Attr_CompositeOptions {
	if x != nil {
		return x.ListOptions
	}
	return nil
}

type Attr_StringType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []string               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attr_StringType) Reset() {
	*x = Attr_StringType{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attr_StringType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr_StringType) ProtoMessage() {}

func (x *Attr_StringType) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr_StringType.ProtoReflect.Descriptor instead.
func (*Attr_StringType) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{4, 9}
}

func (x *Attr_StringType) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type Attr_StringDictType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DictOptions   *Attr_CompositeOptions `protobuf:"bytes,1,opt,name=dict_options,json=dictOptions,proto3" json:"dict_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attr_StringDictType) Reset() {
	*x = Attr_StringDictType{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attr_StringDictType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr_StringDictType) ProtoMessage() {}

func (x *Attr_StringDictType) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr_StringDictType.ProtoReflect.Descriptor instead.
func (*Attr_StringDictType) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{4, 10}
}

func (x *Attr_StringDictType) GetDictOptions() *Attr_CompositeOptions {
	if x != nil {
		return x.DictOptions
	}
	return nil
}

type Attr_StringListType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ListOptions   *Attr_CompositeOptions `protobuf:"bytes,1,opt,name=list_options,json=listOptions,proto3" json:"list_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attr_StringListType) Reset() {
	*x = Attr_StringListType{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attr_StringListType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr_StringListType) ProtoMessage() {}

func (x *Attr_StringListType) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr_StringListType.ProtoReflect.Descriptor instead.
func (*Attr_StringListType) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{4, 11}
}

func (x *Attr_StringListType) GetListOptions() *Attr_CompositeOptions {
	if x != nil {
		return x.ListOptions
	}
	return nil
}

type Attr_StringListDictType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DictOptions   *Attr_CompositeOptions `protobuf:"bytes,1,opt,name=dict_options,json=dictOptions,proto3" json:"dict_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attr_StringListDictType) Reset() {
	*x = Attr_StringListDictType{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attr_StringListDictType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr_StringListDictType) ProtoMessage() {}

func (x *Attr_StringListDictType) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr_StringListDictType.ProtoReflect.Descriptor instead.
func (*Attr_StringListDictType) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{4, 12}
}

func (x *Attr_StringListDictType) GetDictOptions() *Attr_CompositeOptions {
	if x != nil {
		return x.DictOptions
	}
	return nil
}

type BuildSetting_ListType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Repeatable    bool                   `protobuf:"varint,1,opt,name=repeatable,proto3" json:"repeatable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildSetting_ListType) Reset() {
	*x = BuildSetting_ListType{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildSetting_ListType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildSetting_ListType) ProtoMessage() {}

func (x *BuildSetting_ListType) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildSetting_ListType.ProtoReflect.Descriptor instead.
func (*BuildSetting_ListType) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{5, 0}
}

func (x *BuildSetting_ListType) GetRepeatable() bool {
	if x != nil {
		return x.Repeatable
	}
	return false
}

type Dict_Entry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Level:
	//
	//	*Dict_Entry_Leaf_
	//	*Dict_Entry_Parent_
	Level         isDict_Entry_Level `protobuf_oneof:"level"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dict_Entry) Reset() {
	*x = Dict_Entry{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dict_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dict_Entry) ProtoMessage() {}

func (x *Dict_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dict_Entry.ProtoReflect.Descriptor instead.
func (*Dict_Entry) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Dict_Entry) GetLevel() isDict_Entry_Level {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *Dict_Entry) GetLeaf() *Dict_Entry_Leaf {
	if x != nil {
		if x, ok := x.Level.(*Dict_Entry_Leaf_); ok {
			return x.Leaf
		}
	}
	return nil
}

func (x *Dict_Entry) GetParent() *Dict_Entry_Parent {
	if x != nil {
		if x, ok := x.Level.(*Dict_Entry_Parent_); ok {
			return x.Parent
		}
	}
	return nil
}

type isDict_Entry_Level interface {
	isDict_Entry_Level()
}

type Dict_Entry_Leaf_ struct {
	Leaf *Dict_Entry_Leaf `protobuf:"bytes,1,opt,name=leaf,proto3,oneof"`
}

type Dict_Entry_Parent_ struct {
	Parent *Dict_Entry_Parent `protobuf:"bytes,2,opt,name=parent,proto3,oneof"`
}

func (*Dict_Entry_Leaf_) isDict_Entry_Level() {}

func (*Dict_Entry_Parent_) isDict_Entry_Level() {}

type Dict_Entry_Leaf struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *Value                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         *Value                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dict_Entry_Leaf) Reset() {
	*x = Dict_Entry_Leaf{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dict_Entry_Leaf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dict_Entry_Leaf) ProtoMessage() {}

func (x *Dict_Entry_Leaf) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dict_Entry_Leaf.ProtoReflect.Descriptor instead.
func (*Dict_Entry_Leaf) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{7, 0, 0}
}

func (x *Dict_Entry_Leaf) GetKey() *Value {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Dict_Entry_Leaf) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type Dict_Entry_Parent struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Reference     *core.DecodableReference `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dict_Entry_Parent) Reset() {
	*x = Dict_Entry_Parent{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dict_Entry_Parent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dict_Entry_Parent) ProtoMessage() {}

func (x *Dict_Entry_Parent) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dict_Entry_Parent.ProtoReflect.Descriptor instead.
func (*Dict_Entry_Parent) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{7, 0, 1}
}

func (x *Dict_Entry_Parent) GetReference() *core.DecodableReference {
	if x != nil {
		return x.Reference
	}
	return nil
}

type File_Owner struct {
	state                  protoimpl.MessageState   `protogen:"open.v1"`
	ConfigurationReference *core.DecodableReference `protobuf:"bytes,1,opt,name=configuration_reference,json=configurationReference,proto3" json:"configuration_reference,omitempty"`
	TargetName             string                   `protobuf:"bytes,2,opt,name=target_name,json=targetName,proto3" json:"target_name,omitempty"`
	Type                   File_Owner_Type          `protobuf:"varint,3,opt,name=type,proto3,enum=bonanza.model.starlark.File_Owner_Type" json:"type,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *File_Owner) Reset() {
	*x = File_Owner{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File_Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File_Owner) ProtoMessage() {}

func (x *File_Owner) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File_Owner.ProtoReflect.Descriptor instead.
func (*File_Owner) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{9, 0}
}

func (x *File_Owner) GetConfigurationReference() *core.DecodableReference {
	if x != nil {
		return x.ConfigurationReference
	}
	return nil
}

func (x *File_Owner) GetTargetName() string {
	if x != nil {
		return x.TargetName
	}
	return ""
}

func (x *File_Owner) GetType() File_Owner_Type {
	if x != nil {
		return x.Type
	}
	return File_Owner_FILE
}

type Function_Closure struct {
	state             protoimpl.MessageState               `protogen:"open.v1"`
	Index             uint32                               `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	DefaultParameters []*Function_Closure_DefaultParameter `protobuf:"bytes,2,rep,name=default_parameters,json=defaultParameters,proto3" json:"default_parameters,omitempty"`
	FreeVariables     []*Value                             `protobuf:"bytes,3,rep,name=free_variables,json=freeVariables,proto3" json:"free_variables,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Function_Closure) Reset() {
	*x = Function_Closure{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Function_Closure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Function_Closure) ProtoMessage() {}

func (x *Function_Closure) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Function_Closure.ProtoReflect.Descriptor instead.
func (*Function_Closure) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Function_Closure) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Function_Closure) GetDefaultParameters() []*Function_Closure_DefaultParameter {
	if x != nil {
		return x.DefaultParameters
	}
	return nil
}

func (x *Function_Closure) GetFreeVariables() []*Value {
	if x != nil {
		return x.FreeVariables
	}
	return nil
}

type Function_Closure_DefaultParameter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         *Value                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Function_Closure_DefaultParameter) Reset() {
	*x = Function_Closure_DefaultParameter{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Function_Closure_DefaultParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Function_Closure_DefaultParameter) ProtoMessage() {}

func (x *Function_Closure_DefaultParameter) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Function_Closure_DefaultParameter.ProtoReflect.Descriptor instead.
func (*Function_Closure_DefaultParameter) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{10, 0, 0}
}

func (x *Function_Closure_DefaultParameter) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type List_Element struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Level:
	//
	//	*List_Element_Leaf
	//	*List_Element_Parent_
	Level         isList_Element_Level `protobuf_oneof:"level"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *List_Element) Reset() {
	*x = List_Element{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *List_Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List_Element) ProtoMessage() {}

func (x *List_Element) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List_Element.ProtoReflect.Descriptor instead.
func (*List_Element) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{14, 0}
}

func (x *List_Element) GetLevel() isList_Element_Level {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *List_Element) GetLeaf() *Value {
	if x != nil {
		if x, ok := x.Level.(*List_Element_Leaf); ok {
			return x.Leaf
		}
	}
	return nil
}

func (x *List_Element) GetParent() *List_Element_Parent {
	if x != nil {
		if x, ok := x.Level.(*List_Element_Parent_); ok {
			return x.Parent
		}
	}
	return nil
}

type isList_Element_Level interface {
	isList_Element_Level()
}

type List_Element_Leaf struct {
	Leaf *Value `protobuf:"bytes,1,opt,name=leaf,proto3,oneof"`
}

type List_Element_Parent_ struct {
	Parent *List_Element_Parent `protobuf:"bytes,2,opt,name=parent,proto3,oneof"`
}

func (*List_Element_Leaf) isList_Element_Level() {}

func (*List_Element_Parent_) isList_Element_Level() {}

type List_Element_Parent struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Reference     *core.DecodableReference `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
	Count         uint64                   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *List_Element_Parent) Reset() {
	*x = List_Element_Parent{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *List_Element_Parent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List_Element_Parent) ProtoMessage() {}

func (x *List_Element_Parent) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List_Element_Parent.ProtoReflect.Descriptor instead.
func (*List_Element_Parent) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{14, 0, 0}
}

func (x *List_Element_Parent) GetReference() *core.DecodableReference {
	if x != nil {
		return x.Reference
	}
	return nil
}

func (x *List_Element_Parent) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ModuleExtension_NamedTagClass struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TagClass      *TagClass              `protobuf:"bytes,2,opt,name=tag_class,json=tagClass,proto3" json:"tag_class,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModuleExtension_NamedTagClass) Reset() {
	*x = ModuleExtension_NamedTagClass{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModuleExtension_NamedTagClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleExtension_NamedTagClass) ProtoMessage() {}

func (x *ModuleExtension_NamedTagClass) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleExtension_NamedTagClass.ProtoReflect.Descriptor instead.
func (*ModuleExtension_NamedTagClass) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ModuleExtension_NamedTagClass) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModuleExtension_NamedTagClass) GetTagClass() *TagClass {
	if x != nil {
		return x.TagClass
	}
	return nil
}

type PackageGroup_Package struct {
	state          protoimpl.MessageState    `protogen:"open.v1"`
	Component      string                    `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
	IncludePackage bool                      `protobuf:"varint,2,opt,name=include_package,json=includePackage,proto3" json:"include_package,omitempty"`
	Subpackages    *PackageGroup_Subpackages `protobuf:"bytes,3,opt,name=subpackages,proto3" json:"subpackages,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PackageGroup_Package) Reset() {
	*x = PackageGroup_Package{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackageGroup_Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageGroup_Package) ProtoMessage() {}

func (x *PackageGroup_Package) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageGroup_Package.ProtoReflect.Descriptor instead.
func (*PackageGroup_Package) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{17, 0}
}

func (x *PackageGroup_Package) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *PackageGroup_Package) GetIncludePackage() bool {
	if x != nil {
		return x.IncludePackage
	}
	return false
}

func (x *PackageGroup_Package) GetSubpackages() *PackageGroup_Subpackages {
	if x != nil {
		return x.Subpackages
	}
	return nil
}

type PackageGroup_Subpackages struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	IncludeSubpackages bool                   `protobuf:"varint,1,opt,name=include_subpackages,json=includeSubpackages,proto3" json:"include_subpackages,omitempty"`
	// Types that are valid to be assigned to Overrides:
	//
	//	*PackageGroup_Subpackages_OverridesExternal
	//	*PackageGroup_Subpackages_OverridesInline
	Overrides     isPackageGroup_Subpackages_Overrides `protobuf_oneof:"overrides"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackageGroup_Subpackages) Reset() {
	*x = PackageGroup_Subpackages{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackageGroup_Subpackages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageGroup_Subpackages) ProtoMessage() {}

func (x *PackageGroup_Subpackages) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageGroup_Subpackages.ProtoReflect.Descriptor instead.
func (*PackageGroup_Subpackages) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{17, 1}
}

func (x *PackageGroup_Subpackages) GetIncludeSubpackages() bool {
	if x != nil {
		return x.IncludeSubpackages
	}
	return false
}

func (x *PackageGroup_Subpackages) GetOverrides() isPackageGroup_Subpackages_Overrides {
	if x != nil {
		return x.Overrides
	}
	return nil
}

func (x *PackageGroup_Subpackages) GetOverridesExternal() *core.DecodableReference {
	if x != nil {
		if x, ok := x.Overrides.(*PackageGroup_Subpackages_OverridesExternal); ok {
			return x.OverridesExternal
		}
	}
	return nil
}

func (x *PackageGroup_Subpackages) GetOverridesInline() *PackageGroup_Subpackages_Overrides {
	if x != nil {
		if x, ok := x.Overrides.(*PackageGroup_Subpackages_OverridesInline); ok {
			return x.OverridesInline
		}
	}
	return nil
}

type isPackageGroup_Subpackages_Overrides interface {
	isPackageGroup_Subpackages_Overrides()
}

type PackageGroup_Subpackages_OverridesExternal struct {
	OverridesExternal *core.DecodableReference `protobuf:"bytes,2,opt,name=overrides_external,json=overridesExternal,proto3,oneof"`
}

type PackageGroup_Subpackages_OverridesInline struct {
	OverridesInline *PackageGroup_Subpackages_Overrides `protobuf:"bytes,3,opt,name=overrides_inline,json=overridesInline,proto3,oneof"`
}

func (*PackageGroup_Subpackages_OverridesExternal) isPackageGroup_Subpackages_Overrides() {}

func (*PackageGroup_Subpackages_OverridesInline) isPackageGroup_Subpackages_Overrides() {}

type PackageGroup_Subpackages_Overrides struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Packages      []*PackageGroup_Package `protobuf:"bytes,1,rep,name=packages,proto3" json:"packages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackageGroup_Subpackages_Overrides) Reset() {
	*x = PackageGroup_Subpackages_Overrides{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackageGroup_Subpackages_Overrides) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageGroup_Subpackages_Overrides) ProtoMessage() {}

func (x *PackageGroup_Subpackages_Overrides) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageGroup_Subpackages_Overrides.ProtoReflect.Descriptor instead.
func (*PackageGroup_Subpackages_Overrides) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{17, 1, 0}
}

func (x *PackageGroup_Subpackages_Overrides) GetPackages() []*PackageGroup_Package {
	if x != nil {
		return x.Packages
	}
	return nil
}

type Provider_InstanceProperties struct {
	state              protoimpl.MessageState                       `protogen:"open.v1"`
	ProviderIdentifier string                                       `protobuf:"bytes,1,opt,name=provider_identifier,json=providerIdentifier,proto3" json:"provider_identifier,omitempty"`
	DictLike           bool                                         `protobuf:"varint,2,opt,name=dict_like,json=dictLike,proto3" json:"dict_like,omitempty"`
	ComputedFields     []*Provider_InstanceProperties_ComputedField `protobuf:"bytes,3,rep,name=computed_fields,json=computedFields,proto3" json:"computed_fields,omitempty"`
	TypeName           string                                       `protobuf:"bytes,4,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Provider_InstanceProperties) Reset() {
	*x = Provider_InstanceProperties{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Provider_InstanceProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider_InstanceProperties) ProtoMessage() {}

func (x *Provider_InstanceProperties) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider_InstanceProperties.ProtoReflect.Descriptor instead.
func (*Provider_InstanceProperties) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{18, 0}
}

func (x *Provider_InstanceProperties) GetProviderIdentifier() string {
	if x != nil {
		return x.ProviderIdentifier
	}
	return ""
}

func (x *Provider_InstanceProperties) GetDictLike() bool {
	if x != nil {
		return x.DictLike
	}
	return false
}

func (x *Provider_InstanceProperties) GetComputedFields() []*Provider_InstanceProperties_ComputedField {
	if x != nil {
		return x.ComputedFields
	}
	return nil
}

func (x *Provider_InstanceProperties) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

type Provider_InstanceProperties_ComputedField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Function      *Function              `protobuf:"bytes,2,opt,name=function,proto3" json:"function,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Provider_InstanceProperties_ComputedField) Reset() {
	*x = Provider_InstanceProperties_ComputedField{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Provider_InstanceProperties_ComputedField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider_InstanceProperties_ComputedField) ProtoMessage() {}

func (x *Provider_InstanceProperties_ComputedField) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider_InstanceProperties_ComputedField.ProtoReflect.Descriptor instead.
func (*Provider_InstanceProperties_ComputedField) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{18, 0, 0}
}

func (x *Provider_InstanceProperties_ComputedField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Provider_InstanceProperties_ComputedField) GetFunction() *Function {
	if x != nil {
		return x.Function
	}
	return nil
}

type Struct_Fields struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []string               `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Values        []*List_Element        `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Struct_Fields) Reset() {
	*x = Struct_Fields{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Struct_Fields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Struct_Fields) ProtoMessage() {}

func (x *Struct_Fields) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Struct_Fields.ProtoReflect.Descriptor instead.
func (*Struct_Fields) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{19, 0}
}

func (x *Struct_Fields) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *Struct_Fields) GetValues() []*List_Element {
	if x != nil {
		return x.Values
	}
	return nil
}

type TargetReference_Configured struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Label         string                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Providers     []*Struct              `protobuf:"bytes,2,rep,name=providers,proto3" json:"providers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TargetReference_Configured) Reset() {
	*x = TargetReference_Configured{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TargetReference_Configured) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetReference_Configured) ProtoMessage() {}

func (x *TargetReference_Configured) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetReference_Configured.ProtoReflect.Descriptor instead.
func (*TargetReference_Configured) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{21, 0}
}

func (x *TargetReference_Configured) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *TargetReference_Configured) GetProviders() []*Struct {
	if x != nil {
		return x.Providers
	}
	return nil
}

type Repo_Definition struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	RepositoryRuleIdentifier string                 `protobuf:"bytes,1,opt,name=repository_rule_identifier,json=repositoryRuleIdentifier,proto3" json:"repository_rule_identifier,omitempty"`
	AttrValues               *Struct_Fields         `protobuf:"bytes,2,opt,name=attr_values,json=attrValues,proto3" json:"attr_values,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Repo_Definition) Reset() {
	*x = Repo_Definition{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Repo_Definition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repo_Definition) ProtoMessage() {}

func (x *Repo_Definition) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repo_Definition.ProtoReflect.Descriptor instead.
func (*Repo_Definition) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{26, 0}
}

func (x *Repo_Definition) GetRepositoryRuleIdentifier() string {
	if x != nil {
		return x.RepositoryRuleIdentifier
	}
	return ""
}

func (x *Repo_Definition) GetAttrValues() *Struct_Fields {
	if x != nil {
		return x.AttrValues
	}
	return nil
}

type RepositoryRule_Definition struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Attrs          []*NamedAttr           `protobuf:"bytes,1,rep,name=attrs,proto3" json:"attrs,omitempty"`
	Implementation *Function              `protobuf:"bytes,2,opt,name=implementation,proto3" json:"implementation,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RepositoryRule_Definition) Reset() {
	*x = RepositoryRule_Definition{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositoryRule_Definition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryRule_Definition) ProtoMessage() {}

func (x *RepositoryRule_Definition) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryRule_Definition.ProtoReflect.Descriptor instead.
func (*RepositoryRule_Definition) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{27, 0}
}

func (x *RepositoryRule_Definition) GetAttrs() []*NamedAttr {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *RepositoryRule_Definition) GetImplementation() *Function {
	if x != nil {
		return x.Implementation
	}
	return nil
}

type Rule_Definition struct {
	state              protoimpl.MessageState  `protogen:"open.v1"`
	Attrs              []*NamedAttr            `protobuf:"bytes,1,rep,name=attrs,proto3" json:"attrs,omitempty"`
	BuildSetting       *BuildSetting           `protobuf:"bytes,2,opt,name=build_setting,json=buildSetting,proto3" json:"build_setting,omitempty"`
	CfgTransition      *Transition_UserDefined `protobuf:"bytes,3,opt,name=cfg_transition,json=cfgTransition,proto3" json:"cfg_transition,omitempty"`
	ExecGroups         []*NamedExecGroup       `protobuf:"bytes,4,rep,name=exec_groups,json=execGroups,proto3" json:"exec_groups,omitempty"`
	Implementation     *Function               `protobuf:"bytes,5,opt,name=implementation,proto3" json:"implementation,omitempty"`
	Initializer        *Function               `protobuf:"bytes,6,opt,name=initializer,proto3" json:"initializer,omitempty"`
	Provides           []string                `protobuf:"bytes,7,rep,name=provides,proto3" json:"provides,omitempty"`
	Test               bool                    `protobuf:"varint,8,opt,name=test,proto3" json:"test,omitempty"`
	SubruleIdentifiers []string                `protobuf:"bytes,9,rep,name=subrule_identifiers,json=subruleIdentifiers,proto3" json:"subrule_identifiers,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Rule_Definition) Reset() {
	*x = Rule_Definition{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule_Definition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule_Definition) ProtoMessage() {}

func (x *Rule_Definition) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule_Definition.ProtoReflect.Descriptor instead.
func (*Rule_Definition) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{28, 0}
}

func (x *Rule_Definition) GetAttrs() []*NamedAttr {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *Rule_Definition) GetBuildSetting() *BuildSetting {
	if x != nil {
		return x.BuildSetting
	}
	return nil
}

func (x *Rule_Definition) GetCfgTransition() *Transition_UserDefined {
	if x != nil {
		return x.CfgTransition
	}
	return nil
}

func (x *Rule_Definition) GetExecGroups() []*NamedExecGroup {
	if x != nil {
		return x.ExecGroups
	}
	return nil
}

func (x *Rule_Definition) GetImplementation() *Function {
	if x != nil {
		return x.Implementation
	}
	return nil
}

func (x *Rule_Definition) GetInitializer() *Function {
	if x != nil {
		return x.Initializer
	}
	return nil
}

func (x *Rule_Definition) GetProvides() []string {
	if x != nil {
		return x.Provides
	}
	return nil
}

func (x *Rule_Definition) GetTest() bool {
	if x != nil {
		return x.Test
	}
	return false
}

func (x *Rule_Definition) GetSubruleIdentifiers() []string {
	if x != nil {
		return x.SubruleIdentifiers
	}
	return nil
}

type RuleTarget_PublicAttrValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ValueParts    []*Select_Group        `protobuf:"bytes,2,rep,name=value_parts,json=valueParts,proto3" json:"value_parts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuleTarget_PublicAttrValue) Reset() {
	*x = RuleTarget_PublicAttrValue{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleTarget_PublicAttrValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleTarget_PublicAttrValue) ProtoMessage() {}

func (x *RuleTarget_PublicAttrValue) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleTarget_PublicAttrValue.ProtoReflect.Descriptor instead.
func (*RuleTarget_PublicAttrValue) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{29, 0}
}

func (x *RuleTarget_PublicAttrValue) GetValueParts() []*Select_Group {
	if x != nil {
		return x.ValueParts
	}
	return nil
}

type Select_Condition struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ConditionIdentifier string                 `protobuf:"bytes,1,opt,name=condition_identifier,json=conditionIdentifier,proto3" json:"condition_identifier,omitempty"`
	Value               *Value                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Select_Condition) Reset() {
	*x = Select_Condition{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Select_Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Select_Condition) ProtoMessage() {}

func (x *Select_Condition) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Select_Condition.ProtoReflect.Descriptor instead.
func (*Select_Condition) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{30, 0}
}

func (x *Select_Condition) GetConditionIdentifier() string {
	if x != nil {
		return x.ConditionIdentifier
	}
	return ""
}

func (x *Select_Condition) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type Select_Group struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Conditions []*Select_Condition    `protobuf:"bytes,1,rep,name=conditions,proto3" json:"conditions,omitempty"`
	// Types that are valid to be assigned to NoMatch:
	//
	//	*Select_Group_NoMatchValue
	//	*Select_Group_NoMatchError
	NoMatch       isSelect_Group_NoMatch `protobuf_oneof:"no_match"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Select_Group) Reset() {
	*x = Select_Group{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Select_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Select_Group) ProtoMessage() {}

func (x *Select_Group) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Select_Group.ProtoReflect.Descriptor instead.
func (*Select_Group) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{30, 1}
}

func (x *Select_Group) GetConditions() []*Select_Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Select_Group) GetNoMatch() isSelect_Group_NoMatch {
	if x != nil {
		return x.NoMatch
	}
	return nil
}

func (x *Select_Group) GetNoMatchValue() *Value {
	if x != nil {
		if x, ok := x.NoMatch.(*Select_Group_NoMatchValue); ok {
			return x.NoMatchValue
		}
	}
	return nil
}

func (x *Select_Group) GetNoMatchError() string {
	if x != nil {
		if x, ok := x.NoMatch.(*Select_Group_NoMatchError); ok {
			return x.NoMatchError
		}
	}
	return ""
}

type isSelect_Group_NoMatch interface {
	isSelect_Group_NoMatch()
}

type Select_Group_NoMatchValue struct {
	NoMatchValue *Value `protobuf:"bytes,2,opt,name=no_match_value,json=noMatchValue,proto3,oneof"`
}

type Select_Group_NoMatchError struct {
	NoMatchError string `protobuf:"bytes,3,opt,name=no_match_error,json=noMatchError,proto3,oneof"`
}

func (*Select_Group_NoMatchValue) isSelect_Group_NoMatch() {}

func (*Select_Group_NoMatchError) isSelect_Group_NoMatch() {}

type Subrule_Definition struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Attrs              []*NamedAttr           `protobuf:"bytes,1,rep,name=attrs,proto3" json:"attrs,omitempty"`
	Implementation     *Function              `protobuf:"bytes,2,opt,name=implementation,proto3" json:"implementation,omitempty"`
	SubruleIdentifiers []string               `protobuf:"bytes,3,rep,name=subrule_identifiers,json=subruleIdentifiers,proto3" json:"subrule_identifiers,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Subrule_Definition) Reset() {
	*x = Subrule_Definition{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subrule_Definition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subrule_Definition) ProtoMessage() {}

func (x *Subrule_Definition) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subrule_Definition.ProtoReflect.Descriptor instead.
func (*Subrule_Definition) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{33, 0}
}

func (x *Subrule_Definition) GetAttrs() []*NamedAttr {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *Subrule_Definition) GetImplementation() *Function {
	if x != nil {
		return x.Implementation
	}
	return nil
}

func (x *Subrule_Definition) GetSubruleIdentifiers() []string {
	if x != nil {
		return x.SubruleIdentifiers
	}
	return nil
}

type Target_Definition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*Target_Definition_Alias
	//	*Target_Definition_LabelSetting
	//	*Target_Definition_PackageGroup
	//	*Target_Definition_PredeclaredOutputFileTarget
	//	*Target_Definition_RuleTarget
	//	*Target_Definition_SourceFileTarget
	Kind          isTarget_Definition_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Target_Definition) Reset() {
	*x = Target_Definition{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target_Definition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Definition) ProtoMessage() {}

func (x *Target_Definition) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Definition.ProtoReflect.Descriptor instead.
func (*Target_Definition) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{34, 0}
}

func (x *Target_Definition) GetKind() isTarget_Definition_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Target_Definition) GetAlias() *Alias {
	if x != nil {
		if x, ok := x.Kind.(*Target_Definition_Alias); ok {
			return x.Alias
		}
	}
	return nil
}

func (x *Target_Definition) GetLabelSetting() *LabelSetting {
	if x != nil {
		if x, ok := x.Kind.(*Target_Definition_LabelSetting); ok {
			return x.LabelSetting
		}
	}
	return nil
}

func (x *Target_Definition) GetPackageGroup() *PackageGroup {
	if x != nil {
		if x, ok := x.Kind.(*Target_Definition_PackageGroup); ok {
			return x.PackageGroup
		}
	}
	return nil
}

func (x *Target_Definition) GetPredeclaredOutputFileTarget() *PredeclaredOutputFileTarget {
	if x != nil {
		if x, ok := x.Kind.(*Target_Definition_PredeclaredOutputFileTarget); ok {
			return x.PredeclaredOutputFileTarget
		}
	}
	return nil
}

func (x *Target_Definition) GetRuleTarget() *RuleTarget {
	if x != nil {
		if x, ok := x.Kind.(*Target_Definition_RuleTarget); ok {
			return x.RuleTarget
		}
	}
	return nil
}

func (x *Target_Definition) GetSourceFileTarget() *SourceFileTarget {
	if x != nil {
		if x, ok := x.Kind.(*Target_Definition_SourceFileTarget); ok {
			return x.SourceFileTarget
		}
	}
	return nil
}

type isTarget_Definition_Kind interface {
	isTarget_Definition_Kind()
}

type Target_Definition_Alias struct {
	Alias *Alias `protobuf:"bytes,1,opt,name=alias,proto3,oneof"`
}

type Target_Definition_LabelSetting struct {
	LabelSetting *LabelSetting `protobuf:"bytes,2,opt,name=label_setting,json=labelSetting,proto3,oneof"`
}

type Target_Definition_PackageGroup struct {
	PackageGroup *PackageGroup `protobuf:"bytes,3,opt,name=package_group,json=packageGroup,proto3,oneof"`
}

type Target_Definition_PredeclaredOutputFileTarget struct {
	PredeclaredOutputFileTarget *PredeclaredOutputFileTarget `protobuf:"bytes,4,opt,name=predeclared_output_file_target,json=predeclaredOutputFileTarget,proto3,oneof"`
}

type Target_Definition_RuleTarget struct {
	RuleTarget *RuleTarget `protobuf:"bytes,5,opt,name=rule_target,json=ruleTarget,proto3,oneof"`
}

type Target_Definition_SourceFileTarget struct {
	SourceFileTarget *SourceFileTarget `protobuf:"bytes,6,opt,name=source_file_target,json=sourceFileTarget,proto3,oneof"`
}

func (*Target_Definition_Alias) isTarget_Definition_Kind() {}

func (*Target_Definition_LabelSetting) isTarget_Definition_Kind() {}

func (*Target_Definition_PackageGroup) isTarget_Definition_Kind() {}

func (*Target_Definition_PredeclaredOutputFileTarget) isTarget_Definition_Kind() {}

func (*Target_Definition_RuleTarget) isTarget_Definition_Kind() {}

func (*Target_Definition_SourceFileTarget) isTarget_Definition_Kind() {}

type Transition_UserDefined struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*Transition_UserDefined_Identifier
	//	*Transition_UserDefined_Definition_
	Kind          isTransition_UserDefined_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transition_UserDefined) Reset() {
	*x = Transition_UserDefined{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transition_UserDefined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transition_UserDefined) ProtoMessage() {}

func (x *Transition_UserDefined) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transition_UserDefined.ProtoReflect.Descriptor instead.
func (*Transition_UserDefined) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{35, 0}
}

func (x *Transition_UserDefined) GetKind() isTransition_UserDefined_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Transition_UserDefined) GetIdentifier() string {
	if x != nil {
		if x, ok := x.Kind.(*Transition_UserDefined_Identifier); ok {
			return x.Identifier
		}
	}
	return ""
}

func (x *Transition_UserDefined) GetDefinition() *Transition_UserDefined_Definition {
	if x != nil {
		if x, ok := x.Kind.(*Transition_UserDefined_Definition_); ok {
			return x.Definition
		}
	}
	return nil
}

type isTransition_UserDefined_Kind interface {
	isTransition_UserDefined_Kind()
}

type Transition_UserDefined_Identifier struct {
	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3,oneof"`
}

type Transition_UserDefined_Definition_ struct {
	Definition *Transition_UserDefined_Definition `protobuf:"bytes,2,opt,name=definition,proto3,oneof"`
}

func (*Transition_UserDefined_Identifier) isTransition_UserDefined_Kind() {}

func (*Transition_UserDefined_Definition_) isTransition_UserDefined_Kind() {}

type Transition_UserDefined_Definition struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Implementation   *Function              `protobuf:"bytes,1,opt,name=implementation,proto3" json:"implementation,omitempty"`
	Inputs           []string               `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs          []string               `protobuf:"bytes,3,rep,name=outputs,proto3" json:"outputs,omitempty"`
	CanonicalPackage string                 `protobuf:"bytes,4,opt,name=canonical_package,json=canonicalPackage,proto3" json:"canonical_package,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Transition_UserDefined_Definition) Reset() {
	*x = Transition_UserDefined_Definition{}
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transition_UserDefined_Definition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transition_UserDefined_Definition) ProtoMessage() {}

func (x *Transition_UserDefined_Definition) ProtoReflect() protoreflect.Message {
	mi := &file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transition_UserDefined_Definition.ProtoReflect.Descriptor instead.
func (*Transition_UserDefined_Definition) Descriptor() ([]byte, []int) {
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP(), []int{35, 0, 0}
}

func (x *Transition_UserDefined_Definition) GetImplementation() *Function {
	if x != nil {
		return x.Implementation
	}
	return nil
}

func (x *Transition_UserDefined_Definition) GetInputs() []string {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Transition_UserDefined_Definition) GetOutputs() []string {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *Transition_UserDefined_Definition) GetCanonicalPackage() string {
	if x != nil {
		return x.CanonicalPackage
	}
	return ""
}

var File_bonanza_build_pkg_proto_model_starlark_starlark_proto protoreflect.FileDescriptor

const file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDesc = "" +
	"\n" +
	"5bonanza.build/pkg/proto/model/starlark/starlark.proto\x12\x16bonanza.model.starlark\x1a-bonanza.build/pkg/proto/model/core/core.proto\x1a\x1bgoogle/protobuf/empty.proto\"f\n" +
	"\x0fCompiledProgram\x12?\n" +
	"\aglobals\x18\x01 \x01(\v2%.bonanza.model.starlark.Struct.FieldsR\aglobals\x12\x12\n" +
	"\x04code\x18\x02 \x01(\fR\x04code\"\x8f\f\n" +
	"\x05Value\x128\n" +
	"\x06aspect\x18\x01 \x01(\v2\x1e.bonanza.model.starlark.AspectH\x00R\x06aspect\x122\n" +
	"\x04attr\x18\x02 \x01(\v2\x1c.bonanza.model.starlark.AttrH\x00R\x04attr\x12\x14\n" +
	"\x04bool\x18\x03 \x01(\bH\x00R\x04bool\x12\x1a\n" +
	"\abuiltin\x18\x04 \x01(\tH\x00R\abuiltin\x12\x16\n" +
	"\x05bytes\x18\x05 \x01(\fH\x00R\x05bytes\x128\n" +
	"\x06depset\x18\x06 \x01(\v2\x1e.bonanza.model.starlark.DepsetH\x00R\x06depset\x122\n" +
	"\x04dict\x18\a \x01(\v2\x1c.bonanza.model.starlark.DictH\x00R\x04dict\x12B\n" +
	"\n" +
	"exec_group\x18\b \x01(\v2!.bonanza.model.starlark.ExecGroupH\x00R\texecGroup\x122\n" +
	"\x04file\x18\t \x01(\v2\x1c.bonanza.model.starlark.FileH\x00R\x04file\x12>\n" +
	"\bfunction\x18\n" +
	" \x01(\v2 .bonanza.model.starlark.FunctionH\x00R\bfunction\x12/\n" +
	"\x03int\x18\v \x01(\v2\x1b.bonanza.model.starlark.IntH\x00R\x03int\x12\x16\n" +
	"\x05label\x18\f \x01(\tH\x00R\x05label\x122\n" +
	"\x04list\x18\r \x01(\v2\x1c.bonanza.model.starlark.ListH\x00R\x04list\x12T\n" +
	"\x10module_extension\x18\x0e \x01(\v2'.bonanza.model.starlark.ModuleExtensionH\x00R\x0fmoduleExtension\x12,\n" +
	"\x04none\x18\x0f \x01(\v2\x16.google.protobuf.EmptyH\x00R\x04none\x12>\n" +
	"\bprovider\x18\x10 \x01(\v2 .bonanza.model.starlark.ProviderH\x00R\bprovider\x12Q\n" +
	"\x0frepository_rule\x18\x11 \x01(\v2&.bonanza.model.starlark.RepositoryRuleH\x00R\x0erepositoryRule\x122\n" +
	"\x04rule\x18\x12 \x01(\v2\x1c.bonanza.model.starlark.RuleH\x00R\x04rule\x128\n" +
	"\x06select\x18\x14 \x01(\v2\x1e.bonanza.model.starlark.SelectH\x00R\x06select\x12/\n" +
	"\x03set\x18\x15 \x01(\v2\x1b.bonanza.model.starlark.SetH\x00R\x03set\x12\x12\n" +
	"\x03str\x18\x16 \x01(\tH\x00R\x03str\x128\n" +
	"\x06struct\x18\x17 \x01(\v2\x1e.bonanza.model.starlark.StructH\x00R\x06struct\x12;\n" +
	"\asubrule\x18\x18 \x01(\v2\x1f.bonanza.model.starlark.SubruleH\x00R\asubrule\x12?\n" +
	"\ttag_class\x18\x19 \x01(\v2 .bonanza.model.starlark.TagClassH\x00R\btagClass\x12T\n" +
	"\x10target_reference\x18\x1a \x01(\v2'.bonanza.model.starlark.TargetReferenceH\x00R\x0ftargetReference\x12N\n" +
	"\x0etoolchain_type\x18\x1b \x01(\v2%.bonanza.model.starlark.ToolchainTypeH\x00R\rtoolchainType\x12D\n" +
	"\n" +
	"transition\x18\x1c \x01(\v2\".bonanza.model.starlark.TransitionH\x00R\n" +
	"transition\x125\n" +
	"\x05tuple\x18\x1d \x01(\v2\x1d.bonanza.model.starlark.TupleH\x00R\x05tupleB\x06\n" +
	"\x04kind\"\x8b\x01\n" +
	"\x05Alias\x12<\n" +
	"\x06actual\x18\x01 \x01(\v2$.bonanza.model.starlark.Select.GroupR\x06actual\x12D\n" +
	"\n" +
	"visibility\x18\x02 \x01(\v2$.bonanza.model.starlark.PackageGroupR\n" +
	"visibility\"\x8b\x01\n" +
	"\x06Aspect\x12\x1e\n" +
	"\treference\x18\x01 \x01(\tH\x00R\treference\x12K\n" +
	"\n" +
	"definition\x18\x02 \x01(\v2).bonanza.model.starlark.Aspect.DefinitionH\x00R\n" +
	"definition\x1a\f\n" +
	"\n" +
	"DefinitionB\x06\n" +
	"\x04kind\"\xde\x12\n" +
	"\x04Attr\x127\n" +
	"\adefault\x18\x01 \x01(\v2\x1d.bonanza.model.starlark.ValueR\adefault\x12,\n" +
	"\x04bool\x18\x02 \x01(\v2\x16.google.protobuf.EmptyH\x00R\x04bool\x128\n" +
	"\x03int\x18\x03 \x01(\v2$.bonanza.model.starlark.Attr.IntTypeH\x00R\x03int\x12E\n" +
	"\bint_list\x18\x04 \x01(\v2(.bonanza.model.starlark.Attr.IntListTypeH\x00R\aintList\x12>\n" +
	"\x05label\x18\x05 \x01(\v2&.bonanza.model.starlark.Attr.LabelTypeH\x00R\x05label\x12n\n" +
	"\x17label_keyed_string_dict\x18\x06 \x01(\v25.bonanza.model.starlark.Attr.LabelKeyedStringDictTypeH\x00R\x14labelKeyedStringDict\x12K\n" +
	"\n" +
	"label_list\x18\a \x01(\v2*.bonanza.model.starlark.Attr.LabelListTypeH\x00R\tlabelList\x12A\n" +
	"\x06output\x18\b \x01(\v2'.bonanza.model.starlark.Attr.OutputTypeH\x00R\x06output\x12N\n" +
	"\voutput_list\x18\t \x01(\v2+.bonanza.model.starlark.Attr.OutputListTypeH\x00R\n" +
	"outputList\x12A\n" +
	"\x06string\x18\n" +
	" \x01(\v2'.bonanza.model.starlark.Attr.StringTypeH\x00R\x06string\x12N\n" +
	"\vstring_dict\x18\v \x01(\v2+.bonanza.model.starlark.Attr.StringDictTypeH\x00R\n" +
	"stringDict\x12N\n" +
	"\vstring_list\x18\f \x01(\v2+.bonanza.model.starlark.Attr.StringListTypeH\x00R\n" +
	"stringList\x12[\n" +
	"\x10string_list_dict\x18\r \x01(\v2/.bonanza.model.starlark.Attr.StringListDictTypeH\x00R\x0estringListDict\x1a\x9d\x01\n" +
	"\fLabelOptions\x12\x1c\n" +
	"\tproviders\x18\x01 \x03(\tR\tproviders\x12\x18\n" +
	"\aaspects\x18\x02 \x03(\tR\aaspects\x124\n" +
	"\x03cfg\x18\x03 \x01(\v2\".bonanza.model.starlark.TransitionR\x03cfg\x12\x1f\n" +
	"\vallow_files\x18\x04 \x01(\fR\n" +
	"allowFiles\x1a3\n" +
	"\x10CompositeOptions\x12\x1f\n" +
	"\vallow_empty\x18\x01 \x01(\bR\n" +
	"allowEmpty\x1a!\n" +
	"\aIntType\x12\x16\n" +
	"\x06values\x18\x01 \x03(\x05R\x06values\x1a_\n" +
	"\vIntListType\x12P\n" +
	"\flist_options\x18\x01 \x01(\v2-.bonanza.model.starlark.Attr.CompositeOptionsR\vlistOptions\x1a\xc6\x01\n" +
	"\tLabelType\x12N\n" +
	"\rvalue_options\x18\x01 \x01(\v2).bonanza.model.starlark.Attr.LabelOptionsR\fvalueOptions\x12\x1d\n" +
	"\n" +
	"allow_none\x18\x02 \x01(\bR\tallowNone\x12*\n" +
	"\x11allow_single_file\x18\x03 \x01(\bR\x0fallowSingleFile\x12\x1e\n" +
	"\n" +
	"executable\x18\x04 \x01(\bR\n" +
	"executable\x1a\xc1\x01\n" +
	"\x18LabelKeyedStringDictType\x12P\n" +
	"\fdict_options\x18\x01 \x01(\v2-.bonanza.model.starlark.Attr.CompositeOptionsR\vdictOptions\x12S\n" +
	"\x10dict_key_options\x18\x02 \x01(\v2).bonanza.model.starlark.Attr.LabelOptionsR\x0edictKeyOptions\x1a\xba\x01\n" +
	"\rLabelListType\x12P\n" +
	"\flist_options\x18\x01 \x01(\v2-.bonanza.model.starlark.Attr.CompositeOptionsR\vlistOptions\x12W\n" +
	"\x12list_value_options\x18\x02 \x01(\v2).bonanza.model.starlark.Attr.LabelOptionsR\x10listValueOptions\x1a9\n" +
	"\n" +
	"OutputType\x12+\n" +
	"\x11filename_template\x18\x01 \x01(\tR\x10filenameTemplate\x1ab\n" +
	"\x0eOutputListType\x12P\n" +
	"\flist_options\x18\x01 \x01(\v2-.bonanza.model.starlark.Attr.CompositeOptionsR\vlistOptions\x1a$\n" +
	"\n" +
	"StringType\x12\x16\n" +
	"\x06values\x18\x01 \x03(\tR\x06values\x1ab\n" +
	"\x0eStringDictType\x12P\n" +
	"\fdict_options\x18\x01 \x01(\v2-.bonanza.model.starlark.Attr.CompositeOptionsR\vdictOptions\x1ab\n" +
	"\x0eStringListType\x12P\n" +
	"\flist_options\x18\x01 \x01(\v2-.bonanza.model.starlark.Attr.CompositeOptionsR\vlistOptions\x1af\n" +
	"\x12StringListDictType\x12P\n" +
	"\fdict_options\x18\x01 \x01(\v2-.bonanza.model.starlark.Attr.CompositeOptionsR\vdictOptionsB\x06\n" +
	"\x04type\"\x84\x03\n" +
	"\fBuildSetting\x12\x12\n" +
	"\x04flag\x18\x01 \x01(\bR\x04flag\x12,\n" +
	"\x04bool\x18\x02 \x01(\v2\x16.google.protobuf.EmptyH\x00R\x04bool\x12*\n" +
	"\x03int\x18\x03 \x01(\v2\x16.google.protobuf.EmptyH\x00R\x03int\x12N\n" +
	"\n" +
	"label_list\x18\x04 \x01(\v2-.bonanza.model.starlark.BuildSetting.ListTypeH\x00R\tlabelList\x120\n" +
	"\x06string\x18\x05 \x01(\v2\x16.google.protobuf.EmptyH\x00R\x06string\x12P\n" +
	"\vstring_list\x18\x06 \x01(\v2-.bonanza.model.starlark.BuildSetting.ListTypeH\x00R\n" +
	"stringList\x1a*\n" +
	"\bListType\x12\x1e\n" +
	"\n" +
	"repeatable\x18\x01 \x01(\bR\n" +
	"repeatableB\x06\n" +
	"\x04type\"\xea\x01\n" +
	"\x06Depset\x12@\n" +
	"\belements\x18\x01 \x03(\v2$.bonanza.model.starlark.List.ElementR\belements\x12:\n" +
	"\x05order\x18\x02 \x01(\x0e2$.bonanza.model.starlark.Depset.OrderR\x05order\x12\x1e\n" +
	"\n" +
	"identifier\x18\x03 \x01(\fR\n" +
	"identifier\"B\n" +
	"\x05Order\x12\v\n" +
	"\aDEFAULT\x10\x00\x12\r\n" +
	"\tPOSTORDER\x10\x01\x12\f\n" +
	"\bPREORDER\x10\x02\x12\x0f\n" +
	"\vTOPOLOGICAL\x10\x03\"\xc2\x03\n" +
	"\x04Dict\x12<\n" +
	"\aentries\x18\x01 \x03(\v2\".bonanza.model.starlark.Dict.EntryR\aentries\x1a\xfb\x02\n" +
	"\x05Entry\x12=\n" +
	"\x04leaf\x18\x01 \x01(\v2'.bonanza.model.starlark.Dict.Entry.LeafH\x00R\x04leaf\x12C\n" +
	"\x06parent\x18\x02 \x01(\v2).bonanza.model.starlark.Dict.Entry.ParentH\x00R\x06parent\x1al\n" +
	"\x04Leaf\x12/\n" +
	"\x03key\x18\x01 \x01(\v2\x1d.bonanza.model.starlark.ValueR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.bonanza.model.starlark.ValueR\x05value\x1aw\n" +
	"\x06Parent\x12m\n" +
	"\treference\x18\x01 \x01(\v2&.bonanza.model.core.DecodableReferenceB'\xea\xd7 #\x1a!bonanza.model.starlark.Dict.EntryR\treferenceB\a\n" +
	"\x05level\"\x84\x01\n" +
	"\tExecGroup\x120\n" +
	"\x14exec_compatible_with\x18\x01 \x03(\tR\x12execCompatibleWith\x12E\n" +
	"\n" +
	"toolchains\x18\x02 \x03(\v2%.bonanza.model.starlark.ToolchainTypeR\n" +
	"toolchains\"\x81\x03\n" +
	"\x04File\x128\n" +
	"\x05owner\x18\x01 \x01(\v2\".bonanza.model.starlark.File.OwnerR\x05owner\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x1a\xa8\x02\n" +
	"\x05Owner\x12\x92\x01\n" +
	"\x17configuration_reference\x18\x01 \x01(\v2&.bonanza.model.core.DecodableReferenceB1\xea\xd7 -\x1a+bonanza.model.analysis.BuildSettingOverrideR\x16configurationReference\x12\x1f\n" +
	"\vtarget_name\x18\x02 \x01(\tR\n" +
	"targetName\x12;\n" +
	"\x04type\x18\x03 \x01(\x0e2'.bonanza.model.starlark.File.Owner.TypeR\x04type\",\n" +
	"\x04Type\x12\b\n" +
	"\x04FILE\x10\x00\x12\r\n" +
	"\tDIRECTORY\x10\x01\x12\v\n" +
	"\aSYMLINK\x10\x02\"\xc5\x03\n" +
	"\bFunction\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x12\n" +
	"\x04line\x18\x02 \x01(\x05R\x04line\x12\x16\n" +
	"\x06column\x18\x03 \x01(\x05R\x06column\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12B\n" +
	"\aclosure\x18\x05 \x01(\v2(.bonanza.model.starlark.Function.ClosureR\aclosure\x1a\x98\x02\n" +
	"\aClosure\x12\x14\n" +
	"\x05index\x18\x01 \x01(\rR\x05index\x12h\n" +
	"\x12default_parameters\x18\x02 \x03(\v29.bonanza.model.starlark.Function.Closure.DefaultParameterR\x11defaultParameters\x12D\n" +
	"\x0efree_variables\x18\x03 \x03(\v2\x1d.bonanza.model.starlark.ValueR\rfreeVariables\x1aG\n" +
	"\x10DefaultParameter\x123\n" +
	"\x05value\x18\x01 \x01(\v2\x1d.bonanza.model.starlark.ValueR\x05value\"\xc1\x01\n" +
	"\x10InheritableAttrs\x12 \n" +
	"\vdeprecation\x18\x01 \x01(\tR\vdeprecation\x12)\n" +
	"\x10package_metadata\x18\x02 \x03(\tR\x0fpackageMetadata\x12\x1a\n" +
	"\btestonly\x18\x03 \x01(\bR\btestonly\x12D\n" +
	"\n" +
	"visibility\x18\x04 \x01(\v2$.bonanza.model.starlark.PackageGroupR\n" +
	"visibility\"H\n" +
	"\x03Int\x12%\n" +
	"\x0eabsolute_value\x18\x01 \x01(\fR\rabsoluteValue\x12\x1a\n" +
	"\bnegative\x18\x02 \x01(\bR\bnegative\"\xc3\x01\n" +
	"\fLabelSetting\x122\n" +
	"\x15build_setting_default\x18\x01 \x01(\tR\x13buildSettingDefault\x12\x12\n" +
	"\x04flag\x18\x02 \x01(\bR\x04flag\x12%\n" +
	"\x0esingleton_list\x18\x03 \x01(\bR\rsingletonList\x12D\n" +
	"\n" +
	"visibility\x18\x04 \x01(\v2$.bonanza.model.starlark.PackageGroupR\n" +
	"visibility\"\xeb\x02\n" +
	"\x04List\x12@\n" +
	"\belements\x18\x01 \x03(\v2$.bonanza.model.starlark.List.ElementR\belements\x1a\xa0\x02\n" +
	"\aElement\x123\n" +
	"\x04leaf\x18\x01 \x01(\v2\x1d.bonanza.model.starlark.ValueH\x00R\x04leaf\x12E\n" +
	"\x06parent\x18\x02 \x01(\v2+.bonanza.model.starlark.List.Element.ParentH\x00R\x06parent\x1a\x8f\x01\n" +
	"\x06Parent\x12o\n" +
	"\treference\x18\x01 \x01(\v2&.bonanza.model.core.DecodableReferenceB)\xea\xd7 %\x1a#bonanza.model.starlark.List.ElementR\treference\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x04R\x05countB\a\n" +
	"\x05level\"\x97\x02\n" +
	"\x0fModuleExtension\x12H\n" +
	"\x0eimplementation\x18\x01 \x01(\v2 .bonanza.model.starlark.FunctionR\x0eimplementation\x12V\n" +
	"\vtag_classes\x18\x02 \x03(\v25.bonanza.model.starlark.ModuleExtension.NamedTagClassR\n" +
	"tagClasses\x1ab\n" +
	"\rNamedTagClass\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12=\n" +
	"\ttag_class\x18\x02 \x01(\v2 .bonanza.model.starlark.TagClassR\btagClass\"I\n" +
	"\x1bPredeclaredOutputFileTarget\x12*\n" +
	"\x11owner_target_name\x18\x01 \x01(\tR\x0fownerTargetName\"\xda\x05\n" +
	"\fPackageGroup\x12D\n" +
	"\x04tree\x18\x01 \x01(\v20.bonanza.model.starlark.PackageGroup.SubpackagesR\x04tree\x124\n" +
	"\x16include_package_groups\x18\x02 \x03(\tR\x14includePackageGroups\x1a\xa4\x01\n" +
	"\aPackage\x12\x1c\n" +
	"\tcomponent\x18\x01 \x01(\tR\tcomponent\x12'\n" +
	"\x0finclude_package\x18\x02 \x01(\bR\x0eincludePackage\x12R\n" +
	"\vsubpackages\x18\x03 \x01(\v20.bonanza.model.starlark.PackageGroup.SubpackagesR\vsubpackages\x1a\xa6\x03\n" +
	"\vSubpackages\x12/\n" +
	"\x13include_subpackages\x18\x01 \x01(\bR\x12includeSubpackages\x12\x98\x01\n" +
	"\x12overrides_external\x18\x02 \x01(\v2&.bonanza.model.core.DecodableReferenceB?\xea\xd7 ;\x129bonanza.model.starlark.PackageGroup.Subpackages.OverridesH\x00R\x11overridesExternal\x12g\n" +
	"\x10overrides_inline\x18\x03 \x01(\v2:.bonanza.model.starlark.PackageGroup.Subpackages.OverridesH\x00R\x0foverridesInline\x1aU\n" +
	"\tOverrides\x12H\n" +
	"\bpackages\x18\x01 \x03(\v2,.bonanza.model.starlark.PackageGroup.PackageR\bpackagesB\v\n" +
	"\toverrides\"\xa0\x04\n" +
	"\bProvider\x12d\n" +
	"\x13instance_properties\x18\x01 \x01(\v23.bonanza.model.starlark.Provider.InstancePropertiesR\x12instanceProperties\x12E\n" +
	"\rinit_function\x18\x02 \x01(\v2 .bonanza.model.starlark.FunctionR\finitFunction\x12\x16\n" +
	"\x06fields\x18\x03 \x03(\tR\x06fields\x1a\xce\x02\n" +
	"\x12InstanceProperties\x12/\n" +
	"\x13provider_identifier\x18\x01 \x01(\tR\x12providerIdentifier\x12\x1b\n" +
	"\tdict_like\x18\x02 \x01(\bR\bdictLike\x12j\n" +
	"\x0fcomputed_fields\x18\x03 \x03(\v2A.bonanza.model.starlark.Provider.InstanceProperties.ComputedFieldR\x0ecomputedFields\x12\x1b\n" +
	"\ttype_name\x18\x04 \x01(\tR\btypeName\x1aa\n" +
	"\rComputedField\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12<\n" +
	"\bfunction\x18\x02 \x01(\v2 .bonanza.model.starlark.FunctionR\bfunction\"\x9a\x02\n" +
	"\x06Struct\x12=\n" +
	"\x06fields\x18\x01 \x01(\v2%.bonanza.model.starlark.Struct.FieldsR\x06fields\x12u\n" +
	"\x1cprovider_instance_properties\x18\x02 \x01(\v23.bonanza.model.starlark.Provider.InstancePropertiesR\x1aproviderInstanceProperties\x1aZ\n" +
	"\x06Fields\x12\x12\n" +
	"\x04keys\x18\x01 \x03(\tR\x04keys\x12<\n" +
	"\x06values\x18\x02 \x03(\v2$.bonanza.model.starlark.List.ElementR\x06values\"C\n" +
	"\bTagClass\x127\n" +
	"\x05attrs\x18\x01 \x03(\v2!.bonanza.model.starlark.NamedAttrR\x05attrs\"\xee\x01\n" +
	"\x0fTargetReference\x12%\n" +
	"\x0eoriginal_label\x18\x01 \x01(\tR\roriginalLabel\x12R\n" +
	"\n" +
	"configured\x18\x02 \x01(\v22.bonanza.model.starlark.TargetReference.ConfiguredR\n" +
	"configured\x1a`\n" +
	"\n" +
	"Configured\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\x12<\n" +
	"\tproviders\x18\x02 \x03(\v2\x1e.bonanza.model.starlark.StructR\tproviders\"T\n" +
	"\rToolchainType\x12%\n" +
	"\x0etoolchain_type\x18\x01 \x01(\tR\rtoolchainType\x12\x1c\n" +
	"\tmandatory\x18\x02 \x01(\bR\tmandatory\"B\n" +
	"\x05Tuple\x129\n" +
	"\belements\x18\x01 \x03(\v2\x1d.bonanza.model.starlark.ValueR\belements\"Q\n" +
	"\tNamedAttr\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x120\n" +
	"\x04attr\x18\x02 \x01(\v2\x1c.bonanza.model.starlark.AttrR\x04attr\"f\n" +
	"\x0eNamedExecGroup\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12@\n" +
	"\n" +
	"exec_group\x18\x02 \x01(\v2!.bonanza.model.starlark.ExecGroupR\texecGroup\"\xf8\x01\n" +
	"\x04Repo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12G\n" +
	"\n" +
	"definition\x18\x02 \x01(\v2'.bonanza.model.starlark.Repo.DefinitionR\n" +
	"definition\x1a\x92\x01\n" +
	"\n" +
	"Definition\x12<\n" +
	"\x1arepository_rule_identifier\x18\x01 \x01(\tR\x18repositoryRuleIdentifier\x12F\n" +
	"\vattr_values\x18\x02 \x01(\v2%.bonanza.model.starlark.Struct.FieldsR\n" +
	"attrValues\"\x9f\x02\n" +
	"\x0eRepositoryRule\x12\x1e\n" +
	"\treference\x18\x01 \x01(\tH\x00R\treference\x12S\n" +
	"\n" +
	"definition\x18\x02 \x01(\v21.bonanza.model.starlark.RepositoryRule.DefinitionH\x00R\n" +
	"definition\x1a\x8f\x01\n" +
	"\n" +
	"Definition\x127\n" +
	"\x05attrs\x18\x01 \x03(\v2!.bonanza.model.starlark.NamedAttrR\x05attrs\x12H\n" +
	"\x0eimplementation\x18\x02 \x01(\v2 .bonanza.model.starlark.FunctionR\x0eimplementationB\x06\n" +
	"\x04kind\"\x9b\x05\n" +
	"\x04Rule\x12\x1e\n" +
	"\treference\x18\x01 \x01(\tH\x00R\treference\x12I\n" +
	"\n" +
	"definition\x18\x02 \x01(\v2'.bonanza.model.starlark.Rule.DefinitionH\x00R\n" +
	"definition\x1a\x9f\x04\n" +
	"\n" +
	"Definition\x127\n" +
	"\x05attrs\x18\x01 \x03(\v2!.bonanza.model.starlark.NamedAttrR\x05attrs\x12I\n" +
	"\rbuild_setting\x18\x02 \x01(\v2$.bonanza.model.starlark.BuildSettingR\fbuildSetting\x12U\n" +
	"\x0ecfg_transition\x18\x03 \x01(\v2..bonanza.model.starlark.Transition.UserDefinedR\rcfgTransition\x12G\n" +
	"\vexec_groups\x18\x04 \x03(\v2&.bonanza.model.starlark.NamedExecGroupR\n" +
	"execGroups\x12H\n" +
	"\x0eimplementation\x18\x05 \x01(\v2 .bonanza.model.starlark.FunctionR\x0eimplementation\x12B\n" +
	"\vinitializer\x18\x06 \x01(\v2 .bonanza.model.starlark.FunctionR\vinitializer\x12\x1a\n" +
	"\bprovides\x18\a \x03(\tR\bprovides\x12\x12\n" +
	"\x04test\x18\b \x01(\bR\x04test\x12/\n" +
	"\x13subrule_identifiers\x18\t \x03(\tR\x12subruleIdentifiersB\x06\n" +
	"\x04kind\"\xbd\x04\n" +
	"\n" +
	"RuleTarget\x12'\n" +
	"\x0frule_identifier\x18\x01 \x01(\tR\x0eruleIdentifier\x12`\n" +
	"\x12public_attr_values\x18\x02 \x03(\v22.bonanza.model.starlark.RuleTarget.PublicAttrValueR\x10publicAttrValues\x120\n" +
	"\x14exec_compatible_with\x18\x03 \x03(\tR\x12execCompatibleWith\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\x12Z\n" +
	"\x16target_compatible_with\x18\x05 \x03(\v2$.bonanza.model.starlark.Select.GroupR\x14targetCompatibleWith\x12U\n" +
	"\x11inheritable_attrs\x18\x06 \x01(\v2(.bonanza.model.starlark.InheritableAttrsR\x10inheritableAttrs\x12Q\n" +
	"\x15build_setting_default\x18\a \x01(\v2\x1d.bonanza.model.starlark.ValueR\x13buildSettingDefault\x1aX\n" +
	"\x0fPublicAttrValue\x12E\n" +
	"\vvalue_parts\x18\x02 \x03(\v2$.bonanza.model.starlark.Select.GroupR\n" +
	"valueParts\"\xae\x04\n" +
	"\x06Select\x12<\n" +
	"\x06groups\x18\x01 \x03(\v2$.bonanza.model.starlark.Select.GroupR\x06groups\x12k\n" +
	"\x16concatenation_operator\x18\x02 \x01(\x0e24.bonanza.model.starlark.Select.ConcatenationOperatorR\x15concatenationOperator\x1as\n" +
	"\tCondition\x121\n" +
	"\x14condition_identifier\x18\x01 \x01(\tR\x13conditionIdentifier\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.bonanza.model.starlark.ValueR\x05value\x1a\xcc\x01\n" +
	"\x05Group\x12H\n" +
	"\n" +
	"conditions\x18\x01 \x03(\v2(.bonanza.model.starlark.Select.ConditionR\n" +
	"conditions\x12E\n" +
	"\x0eno_match_value\x18\x02 \x01(\v2\x1d.bonanza.model.starlark.ValueH\x00R\fnoMatchValue\x12&\n" +
	"\x0eno_match_error\x18\x03 \x01(\tH\x00R\fnoMatchErrorB\n" +
	"\n" +
	"\bno_match\"5\n" +
	"\x15ConcatenationOperator\x12\b\n" +
	"\x04NONE\x10\x00\x12\b\n" +
	"\x04PIPE\x10\x01\x12\b\n" +
	"\x04PLUS\x10\x02\"G\n" +
	"\x03Set\x12@\n" +
	"\belements\x18\x01 \x03(\v2$.bonanza.model.starlark.List.ElementR\belements\"X\n" +
	"\x10SourceFileTarget\x12D\n" +
	"\n" +
	"visibility\x18\x04 \x01(\v2$.bonanza.model.starlark.PackageGroupR\n" +
	"visibility\"\xc2\x02\n" +
	"\aSubrule\x12\x1e\n" +
	"\treference\x18\x01 \x01(\tH\x00R\treference\x12L\n" +
	"\n" +
	"definition\x18\x02 \x01(\v2*.bonanza.model.starlark.Subrule.DefinitionH\x00R\n" +
	"definition\x1a\xc0\x01\n" +
	"\n" +
	"Definition\x127\n" +
	"\x05attrs\x18\x01 \x03(\v2!.bonanza.model.starlark.NamedAttrR\x05attrs\x12H\n" +
	"\x0eimplementation\x18\x02 \x01(\v2 .bonanza.model.starlark.FunctionR\x0eimplementation\x12/\n" +
	"\x13subrule_identifiers\x18\x03 \x03(\tR\x12subruleIdentifiersB\x06\n" +
	"\x04kind\"\xec\x04\n" +
	"\x06Target\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12I\n" +
	"\n" +
	"definition\x18\x02 \x01(\v2).bonanza.model.starlark.Target.DefinitionR\n" +
	"definition\x1a\x82\x04\n" +
	"\n" +
	"Definition\x125\n" +
	"\x05alias\x18\x01 \x01(\v2\x1d.bonanza.model.starlark.AliasH\x00R\x05alias\x12K\n" +
	"\rlabel_setting\x18\x02 \x01(\v2$.bonanza.model.starlark.LabelSettingH\x00R\flabelSetting\x12K\n" +
	"\rpackage_group\x18\x03 \x01(\v2$.bonanza.model.starlark.PackageGroupH\x00R\fpackageGroup\x12z\n" +
	"\x1epredeclared_output_file_target\x18\x04 \x01(\v23.bonanza.model.starlark.PredeclaredOutputFileTargetH\x00R\x1bpredeclaredOutputFileTarget\x12E\n" +
	"\vrule_target\x18\x05 \x01(\v2\".bonanza.model.starlark.RuleTargetH\x00R\n" +
	"ruleTarget\x12X\n" +
	"\x12source_file_target\x18\x06 \x01(\v2(.bonanza.model.starlark.SourceFileTargetH\x00R\x10sourceFileTargetB\x06\n" +
	"\x04kind\"\xf7\x04\n" +
	"\n" +
	"Transition\x12\x1f\n" +
	"\n" +
	"exec_group\x18\x01 \x01(\tH\x00R\texecGroup\x12,\n" +
	"\x04none\x18\x02 \x01(\v2\x16.google.protobuf.EmptyH\x00R\x04none\x120\n" +
	"\x06target\x18\x03 \x01(\v2\x16.google.protobuf.EmptyH\x00R\x06target\x12S\n" +
	"\fuser_defined\x18\x04 \x01(\v2..bonanza.model.starlark.Transition.UserDefinedH\x00R\vuserDefined\x12<\n" +
	"\funconfigured\x18\x05 \x01(\v2\x16.google.protobuf.EmptyH\x00R\funconfigured\x1a\xcc\x02\n" +
	"\vUserDefined\x12 \n" +
	"\n" +
	"identifier\x18\x01 \x01(\tH\x00R\n" +
	"identifier\x12[\n" +
	"\n" +
	"definition\x18\x02 \x01(\v29.bonanza.model.starlark.Transition.UserDefined.DefinitionH\x00R\n" +
	"definition\x1a\xb5\x01\n" +
	"\n" +
	"Definition\x12H\n" +
	"\x0eimplementation\x18\x01 \x01(\v2 .bonanza.model.starlark.FunctionR\x0eimplementation\x12\x16\n" +
	"\x06inputs\x18\x02 \x03(\tR\x06inputs\x12\x18\n" +
	"\aoutputs\x18\x03 \x03(\tR\aoutputs\x12+\n" +
	"\x11canonical_package\x18\x04 \x01(\tR\x10canonicalPackageB\x06\n" +
	"\x04kindB\x06\n" +
	"\x04kindB(Z&bonanza.build/pkg/proto/model/starlarkb\x06proto3"

var (
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescOnce sync.Once
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescData []byte
)

func file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescGZIP() []byte {
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescOnce.Do(func() {
		file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDesc), len(file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDesc)))
	})
	return file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDescData
}

var file_bonanza_build_pkg_proto_model_starlark_starlark_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes = make([]protoimpl.MessageInfo, 77)
var file_bonanza_build_pkg_proto_model_starlark_starlark_proto_goTypes = []any{
	(Depset_Order)(0),                                 // 0: bonanza.model.starlark.Depset.Order
	(File_Owner_Type)(0),                              // 1: bonanza.model.starlark.File.Owner.Type
	(Select_ConcatenationOperator)(0),                 // 2: bonanza.model.starlark.Select.ConcatenationOperator
	(*CompiledProgram)(nil),                           // 3: bonanza.model.starlark.CompiledProgram
	(*Value)(nil),                                     // 4: bonanza.model.starlark.Value
	(*Alias)(nil),                                     // 5: bonanza.model.starlark.Alias
	(*Aspect)(nil),                                    // 6: bonanza.model.starlark.Aspect
	(*Attr)(nil),                                      // 7: bonanza.model.starlark.Attr
	(*BuildSetting)(nil),                              // 8: bonanza.model.starlark.BuildSetting
	(*Depset)(nil),                                    // 9: bonanza.model.starlark.Depset
	(*Dict)(nil),                                      // 10: bonanza.model.starlark.Dict
	(*ExecGroup)(nil),                                 // 11: bonanza.model.starlark.ExecGroup
	(*File)(nil),                                      // 12: bonanza.model.starlark.File
	(*Function)(nil),                                  // 13: bonanza.model.starlark.Function
	(*InheritableAttrs)(nil),                          // 14: bonanza.model.starlark.InheritableAttrs
	(*Int)(nil),                                       // 15: bonanza.model.starlark.Int
	(*LabelSetting)(nil),                              // 16: bonanza.model.starlark.LabelSetting
	(*List)(nil),                                      // 17: bonanza.model.starlark.List
	(*ModuleExtension)(nil),                           // 18: bonanza.model.starlark.ModuleExtension
	(*PredeclaredOutputFileTarget)(nil),               // 19: bonanza.model.starlark.PredeclaredOutputFileTarget
	(*PackageGroup)(nil),                              // 20: bonanza.model.starlark.PackageGroup
	(*Provider)(nil),                                  // 21: bonanza.model.starlark.Provider
	(*Struct)(nil),                                    // 22: bonanza.model.starlark.Struct
	(*TagClass)(nil),                                  // 23: bonanza.model.starlark.TagClass
	(*TargetReference)(nil),                           // 24: bonanza.model.starlark.TargetReference
	(*ToolchainType)(nil),                             // 25: bonanza.model.starlark.ToolchainType
	(*Tuple)(nil),                                     // 26: bonanza.model.starlark.Tuple
	(*NamedAttr)(nil),                                 // 27: bonanza.model.starlark.NamedAttr
	(*NamedExecGroup)(nil),                            // 28: bonanza.model.starlark.NamedExecGroup
	(*Repo)(nil),                                      // 29: bonanza.model.starlark.Repo
	(*RepositoryRule)(nil),                            // 30: bonanza.model.starlark.RepositoryRule
	(*Rule)(nil),                                      // 31: bonanza.model.starlark.Rule
	(*RuleTarget)(nil),                                // 32: bonanza.model.starlark.RuleTarget
	(*Select)(nil),                                    // 33: bonanza.model.starlark.Select
	(*Set)(nil),                                       // 34: bonanza.model.starlark.Set
	(*SourceFileTarget)(nil),                          // 35: bonanza.model.starlark.SourceFileTarget
	(*Subrule)(nil),                                   // 36: bonanza.model.starlark.Subrule
	(*Target)(nil),                                    // 37: bonanza.model.starlark.Target
	(*Transition)(nil),                                // 38: bonanza.model.starlark.Transition
	(*Aspect_Definition)(nil),                         // 39: bonanza.model.starlark.Aspect.Definition
	(*Attr_LabelOptions)(nil),                         // 40: bonanza.model.starlark.Attr.LabelOptions
	(*Attr_CompositeOptions)(nil),                     // 41: bonanza.model.starlark.Attr.CompositeOptions
	(*Attr_IntType)(nil),                              // 42: bonanza.model.starlark.Attr.IntType
	(*Attr_IntListType)(nil),                          // 43: bonanza.model.starlark.Attr.IntListType
	(*Attr_LabelType)(nil),                            // 44: bonanza.model.starlark.Attr.LabelType
	(*Attr_LabelKeyedStringDictType)(nil),             // 45: bonanza.model.starlark.Attr.LabelKeyedStringDictType
	(*Attr_LabelListType)(nil),                        // 46: bonanza.model.starlark.Attr.LabelListType
	(*Attr_OutputType)(nil),                           // 47: bonanza.model.starlark.Attr.OutputType
	(*Attr_OutputListType)(nil),                       // 48: bonanza.model.starlark.Attr.OutputListType
	(*Attr_StringType)(nil),                           // 49: bonanza.model.starlark.Attr.StringType
	(*Attr_StringDictType)(nil),                       // 50: bonanza.model.starlark.Attr.StringDictType
	(*Attr_StringListType)(nil),                       // 51: bonanza.model.starlark.Attr.StringListType
	(*Attr_StringListDictType)(nil),                   // 52: bonanza.model.starlark.Attr.StringListDictType
	(*BuildSetting_ListType)(nil),                     // 53: bonanza.model.starlark.BuildSetting.ListType
	(*Dict_Entry)(nil),                                // 54: bonanza.model.starlark.Dict.Entry
	(*Dict_Entry_Leaf)(nil),                           // 55: bonanza.model.starlark.Dict.Entry.Leaf
	(*Dict_Entry_Parent)(nil),                         // 56: bonanza.model.starlark.Dict.Entry.Parent
	(*File_Owner)(nil),                                // 57: bonanza.model.starlark.File.Owner
	(*Function_Closure)(nil),                          // 58: bonanza.model.starlark.Function.Closure
	(*Function_Closure_DefaultParameter)(nil),         // 59: bonanza.model.starlark.Function.Closure.DefaultParameter
	(*List_Element)(nil),                              // 60: bonanza.model.starlark.List.Element
	(*List_Element_Parent)(nil),                       // 61: bonanza.model.starlark.List.Element.Parent
	(*ModuleExtension_NamedTagClass)(nil),             // 62: bonanza.model.starlark.ModuleExtension.NamedTagClass
	(*PackageGroup_Package)(nil),                      // 63: bonanza.model.starlark.PackageGroup.Package
	(*PackageGroup_Subpackages)(nil),                  // 64: bonanza.model.starlark.PackageGroup.Subpackages
	(*PackageGroup_Subpackages_Overrides)(nil),        // 65: bonanza.model.starlark.PackageGroup.Subpackages.Overrides
	(*Provider_InstanceProperties)(nil),               // 66: bonanza.model.starlark.Provider.InstanceProperties
	(*Provider_InstanceProperties_ComputedField)(nil), // 67: bonanza.model.starlark.Provider.InstanceProperties.ComputedField
	(*Struct_Fields)(nil),                             // 68: bonanza.model.starlark.Struct.Fields
	(*TargetReference_Configured)(nil),                // 69: bonanza.model.starlark.TargetReference.Configured
	(*Repo_Definition)(nil),                           // 70: bonanza.model.starlark.Repo.Definition
	(*RepositoryRule_Definition)(nil),                 // 71: bonanza.model.starlark.RepositoryRule.Definition
	(*Rule_Definition)(nil),                           // 72: bonanza.model.starlark.Rule.Definition
	(*RuleTarget_PublicAttrValue)(nil),                // 73: bonanza.model.starlark.RuleTarget.PublicAttrValue
	(*Select_Condition)(nil),                          // 74: bonanza.model.starlark.Select.Condition
	(*Select_Group)(nil),                              // 75: bonanza.model.starlark.Select.Group
	(*Subrule_Definition)(nil),                        // 76: bonanza.model.starlark.Subrule.Definition
	(*Target_Definition)(nil),                         // 77: bonanza.model.starlark.Target.Definition
	(*Transition_UserDefined)(nil),                    // 78: bonanza.model.starlark.Transition.UserDefined
	(*Transition_UserDefined_Definition)(nil),         // 79: bonanza.model.starlark.Transition.UserDefined.Definition
	(*emptypb.Empty)(nil),                             // 80: google.protobuf.Empty
	(*core.DecodableReference)(nil),                   // 81: bonanza.model.core.DecodableReference
}
var file_bonanza_build_pkg_proto_model_starlark_starlark_proto_depIdxs = []int32{
	68,  // 0: bonanza.model.starlark.CompiledProgram.globals:type_name -> bonanza.model.starlark.Struct.Fields
	6,   // 1: bonanza.model.starlark.Value.aspect:type_name -> bonanza.model.starlark.Aspect
	7,   // 2: bonanza.model.starlark.Value.attr:type_name -> bonanza.model.starlark.Attr
	9,   // 3: bonanza.model.starlark.Value.depset:type_name -> bonanza.model.starlark.Depset
	10,  // 4: bonanza.model.starlark.Value.dict:type_name -> bonanza.model.starlark.Dict
	11,  // 5: bonanza.model.starlark.Value.exec_group:type_name -> bonanza.model.starlark.ExecGroup
	12,  // 6: bonanza.model.starlark.Value.file:type_name -> bonanza.model.starlark.File
	13,  // 7: bonanza.model.starlark.Value.function:type_name -> bonanza.model.starlark.Function
	15,  // 8: bonanza.model.starlark.Value.int:type_name -> bonanza.model.starlark.Int
	17,  // 9: bonanza.model.starlark.Value.list:type_name -> bonanza.model.starlark.List
	18,  // 10: bonanza.model.starlark.Value.module_extension:type_name -> bonanza.model.starlark.ModuleExtension
	80,  // 11: bonanza.model.starlark.Value.none:type_name -> google.protobuf.Empty
	21,  // 12: bonanza.model.starlark.Value.provider:type_name -> bonanza.model.starlark.Provider
	30,  // 13: bonanza.model.starlark.Value.repository_rule:type_name -> bonanza.model.starlark.RepositoryRule
	31,  // 14: bonanza.model.starlark.Value.rule:type_name -> bonanza.model.starlark.Rule
	33,  // 15: bonanza.model.starlark.Value.select:type_name -> bonanza.model.starlark.Select
	34,  // 16: bonanza.model.starlark.Value.set:type_name -> bonanza.model.starlark.Set
	22,  // 17: bonanza.model.starlark.Value.struct:type_name -> bonanza.model.starlark.Struct
	36,  // 18: bonanza.model.starlark.Value.subrule:type_name -> bonanza.model.starlark.Subrule
	23,  // 19: bonanza.model.starlark.Value.tag_class:type_name -> bonanza.model.starlark.TagClass
	24,  // 20: bonanza.model.starlark.Value.target_reference:type_name -> bonanza.model.starlark.TargetReference
	25,  // 21: bonanza.model.starlark.Value.toolchain_type:type_name -> bonanza.model.starlark.ToolchainType
	38,  // 22: bonanza.model.starlark.Value.transition:type_name -> bonanza.model.starlark.Transition
	26,  // 23: bonanza.model.starlark.Value.tuple:type_name -> bonanza.model.starlark.Tuple
	75,  // 24: bonanza.model.starlark.Alias.actual:type_name -> bonanza.model.starlark.Select.Group
	20,  // 25: bonanza.model.starlark.Alias.visibility:type_name -> bonanza.model.starlark.PackageGroup
	39,  // 26: bonanza.model.starlark.Aspect.definition:type_name -> bonanza.model.starlark.Aspect.Definition
	4,   // 27: bonanza.model.starlark.Attr.default:type_name -> bonanza.model.starlark.Value
	80,  // 28: bonanza.model.starlark.Attr.bool:type_name -> google.protobuf.Empty
	42,  // 29: bonanza.model.starlark.Attr.int:type_name -> bonanza.model.starlark.Attr.IntType
	43,  // 30: bonanza.model.starlark.Attr.int_list:type_name -> bonanza.model.starlark.Attr.IntListType
	44,  // 31: bonanza.model.starlark.Attr.label:type_name -> bonanza.model.starlark.Attr.LabelType
	45,  // 32: bonanza.model.starlark.Attr.label_keyed_string_dict:type_name -> bonanza.model.starlark.Attr.LabelKeyedStringDictType
	46,  // 33: bonanza.model.starlark.Attr.label_list:type_name -> bonanza.model.starlark.Attr.LabelListType
	47,  // 34: bonanza.model.starlark.Attr.output:type_name -> bonanza.model.starlark.Attr.OutputType
	48,  // 35: bonanza.model.starlark.Attr.output_list:type_name -> bonanza.model.starlark.Attr.OutputListType
	49,  // 36: bonanza.model.starlark.Attr.string:type_name -> bonanza.model.starlark.Attr.StringType
	50,  // 37: bonanza.model.starlark.Attr.string_dict:type_name -> bonanza.model.starlark.Attr.StringDictType
	51,  // 38: bonanza.model.starlark.Attr.string_list:type_name -> bonanza.model.starlark.Attr.StringListType
	52,  // 39: bonanza.model.starlark.Attr.string_list_dict:type_name -> bonanza.model.starlark.Attr.StringListDictType
	80,  // 40: bonanza.model.starlark.BuildSetting.bool:type_name -> google.protobuf.Empty
	80,  // 41: bonanza.model.starlark.BuildSetting.int:type_name -> google.protobuf.Empty
	53,  // 42: bonanza.model.starlark.BuildSetting.label_list:type_name -> bonanza.model.starlark.BuildSetting.ListType
	80,  // 43: bonanza.model.starlark.BuildSetting.string:type_name -> google.protobuf.Empty
	53,  // 44: bonanza.model.starlark.BuildSetting.string_list:type_name -> bonanza.model.starlark.BuildSetting.ListType
	60,  // 45: bonanza.model.starlark.Depset.elements:type_name -> bonanza.model.starlark.List.Element
	0,   // 46: bonanza.model.starlark.Depset.order:type_name -> bonanza.model.starlark.Depset.Order
	54,  // 47: bonanza.model.starlark.Dict.entries:type_name -> bonanza.model.starlark.Dict.Entry
	25,  // 48: bonanza.model.starlark.ExecGroup.toolchains:type_name -> bonanza.model.starlark.ToolchainType
	57,  // 49: bonanza.model.starlark.File.owner:type_name -> bonanza.model.starlark.File.Owner
	58,  // 50: bonanza.model.starlark.Function.closure:type_name -> bonanza.model.starlark.Function.Closure
	20,  // 51: bonanza.model.starlark.InheritableAttrs.visibility:type_name -> bonanza.model.starlark.PackageGroup
	20,  // 52: bonanza.model.starlark.LabelSetting.visibility:type_name -> bonanza.model.starlark.PackageGroup
	60,  // 53: bonanza.model.starlark.List.elements:type_name -> bonanza.model.starlark.List.Element
	13,  // 54: bonanza.model.starlark.ModuleExtension.implementation:type_name -> bonanza.model.starlark.Function
	62,  // 55: bonanza.model.starlark.ModuleExtension.tag_classes:type_name -> bonanza.model.starlark.ModuleExtension.NamedTagClass
	64,  // 56: bonanza.model.starlark.PackageGroup.tree:type_name -> bonanza.model.starlark.PackageGroup.Subpackages
	66,  // 57: bonanza.model.starlark.Provider.instance_properties:type_name -> bonanza.model.starlark.Provider.InstanceProperties
	13,  // 58: bonanza.model.starlark.Provider.init_function:type_name -> bonanza.model.starlark.Function
	68,  // 59: bonanza.model.starlark.Struct.fields:type_name -> bonanza.model.starlark.Struct.Fields
	66,  // 60: bonanza.model.starlark.Struct.provider_instance_properties:type_name -> bonanza.model.starlark.Provider.InstanceProperties
	27,  // 61: bonanza.model.starlark.TagClass.attrs:type_name -> bonanza.model.starlark.NamedAttr
	69,  // 62: bonanza.model.starlark.TargetReference.configured:type_name -> bonanza.model.starlark.TargetReference.Configured
	4,   // 63: bonanza.model.starlark.Tuple.elements:type_name -> bonanza.model.starlark.Value
	7,   // 64: bonanza.model.starlark.NamedAttr.attr:type_name -> bonanza.model.starlark.Attr
	11,  // 65: bonanza.model.starlark.NamedExecGroup.exec_group:type_name -> bonanza.model.starlark.ExecGroup
	70,  // 66: bonanza.model.starlark.Repo.definition:type_name -> bonanza.model.starlark.Repo.Definition
	71,  // 67: bonanza.model.starlark.RepositoryRule.definition:type_name -> bonanza.model.starlark.RepositoryRule.Definition
	72,  // 68: bonanza.model.starlark.Rule.definition:type_name -> bonanza.model.starlark.Rule.Definition
	73,  // 69: bonanza.model.starlark.RuleTarget.public_attr_values:type_name -> bonanza.model.starlark.RuleTarget.PublicAttrValue
	75,  // 70: bonanza.model.starlark.RuleTarget.target_compatible_with:type_name -> bonanza.model.starlark.Select.Group
	14,  // 71: bonanza.model.starlark.RuleTarget.inheritable_attrs:type_name -> bonanza.model.starlark.InheritableAttrs
	4,   // 72: bonanza.model.starlark.RuleTarget.build_setting_default:type_name -> bonanza.model.starlark.Value
	75,  // 73: bonanza.model.starlark.Select.groups:type_name -> bonanza.model.starlark.Select.Group
	2,   // 74: bonanza.model.starlark.Select.concatenation_operator:type_name -> bonanza.model.starlark.Select.ConcatenationOperator
	60,  // 75: bonanza.model.starlark.Set.elements:type_name -> bonanza.model.starlark.List.Element
	20,  // 76: bonanza.model.starlark.SourceFileTarget.visibility:type_name -> bonanza.model.starlark.PackageGroup
	76,  // 77: bonanza.model.starlark.Subrule.definition:type_name -> bonanza.model.starlark.Subrule.Definition
	77,  // 78: bonanza.model.starlark.Target.definition:type_name -> bonanza.model.starlark.Target.Definition
	80,  // 79: bonanza.model.starlark.Transition.none:type_name -> google.protobuf.Empty
	80,  // 80: bonanza.model.starlark.Transition.target:type_name -> google.protobuf.Empty
	78,  // 81: bonanza.model.starlark.Transition.user_defined:type_name -> bonanza.model.starlark.Transition.UserDefined
	80,  // 82: bonanza.model.starlark.Transition.unconfigured:type_name -> google.protobuf.Empty
	38,  // 83: bonanza.model.starlark.Attr.LabelOptions.cfg:type_name -> bonanza.model.starlark.Transition
	41,  // 84: bonanza.model.starlark.Attr.IntListType.list_options:type_name -> bonanza.model.starlark.Attr.CompositeOptions
	40,  // 85: bonanza.model.starlark.Attr.LabelType.value_options:type_name -> bonanza.model.starlark.Attr.LabelOptions
	41,  // 86: bonanza.model.starlark.Attr.LabelKeyedStringDictType.dict_options:type_name -> bonanza.model.starlark.Attr.CompositeOptions
	40,  // 87: bonanza.model.starlark.Attr.LabelKeyedStringDictType.dict_key_options:type_name -> bonanza.model.starlark.Attr.LabelOptions
	41,  // 88: bonanza.model.starlark.Attr.LabelListType.list_options:type_name -> bonanza.model.starlark.Attr.CompositeOptions
	40,  // 89: bonanza.model.starlark.Attr.LabelListType.list_value_options:type_name -> bonanza.model.starlark.Attr.LabelOptions
	41,  // 90: bonanza.model.starlark.Attr.OutputListType.list_options:type_name -> bonanza.model.starlark.Attr.CompositeOptions
	41,  // 91: bonanza.model.starlark.Attr.StringDictType.dict_options:type_name -> bonanza.model.starlark.Attr.CompositeOptions
	41,  // 92: bonanza.model.starlark.Attr.StringListType.list_options:type_name -> bonanza.model.starlark.Attr.CompositeOptions
	41,  // 93: bonanza.model.starlark.Attr.StringListDictType.dict_options:type_name -> bonanza.model.starlark.Attr.CompositeOptions
	55,  // 94: bonanza.model.starlark.Dict.Entry.leaf:type_name -> bonanza.model.starlark.Dict.Entry.Leaf
	56,  // 95: bonanza.model.starlark.Dict.Entry.parent:type_name -> bonanza.model.starlark.Dict.Entry.Parent
	4,   // 96: bonanza.model.starlark.Dict.Entry.Leaf.key:type_name -> bonanza.model.starlark.Value
	4,   // 97: bonanza.model.starlark.Dict.Entry.Leaf.value:type_name -> bonanza.model.starlark.Value
	81,  // 98: bonanza.model.starlark.Dict.Entry.Parent.reference:type_name -> bonanza.model.core.DecodableReference
	81,  // 99: bonanza.model.starlark.File.Owner.configuration_reference:type_name -> bonanza.model.core.DecodableReference
	1,   // 100: bonanza.model.starlark.File.Owner.type:type_name -> bonanza.model.starlark.File.Owner.Type
	59,  // 101: bonanza.model.starlark.Function.Closure.default_parameters:type_name -> bonanza.model.starlark.Function.Closure.DefaultParameter
	4,   // 102: bonanza.model.starlark.Function.Closure.free_variables:type_name -> bonanza.model.starlark.Value
	4,   // 103: bonanza.model.starlark.Function.Closure.DefaultParameter.value:type_name -> bonanza.model.starlark.Value
	4,   // 104: bonanza.model.starlark.List.Element.leaf:type_name -> bonanza.model.starlark.Value
	61,  // 105: bonanza.model.starlark.List.Element.parent:type_name -> bonanza.model.starlark.List.Element.Parent
	81,  // 106: bonanza.model.starlark.List.Element.Parent.reference:type_name -> bonanza.model.core.DecodableReference
	23,  // 107: bonanza.model.starlark.ModuleExtension.NamedTagClass.tag_class:type_name -> bonanza.model.starlark.TagClass
	64,  // 108: bonanza.model.starlark.PackageGroup.Package.subpackages:type_name -> bonanza.model.starlark.PackageGroup.Subpackages
	81,  // 109: bonanza.model.starlark.PackageGroup.Subpackages.overrides_external:type_name -> bonanza.model.core.DecodableReference
	65,  // 110: bonanza.model.starlark.PackageGroup.Subpackages.overrides_inline:type_name -> bonanza.model.starlark.PackageGroup.Subpackages.Overrides
	63,  // 111: bonanza.model.starlark.PackageGroup.Subpackages.Overrides.packages:type_name -> bonanza.model.starlark.PackageGroup.Package
	67,  // 112: bonanza.model.starlark.Provider.InstanceProperties.computed_fields:type_name -> bonanza.model.starlark.Provider.InstanceProperties.ComputedField
	13,  // 113: bonanza.model.starlark.Provider.InstanceProperties.ComputedField.function:type_name -> bonanza.model.starlark.Function
	60,  // 114: bonanza.model.starlark.Struct.Fields.values:type_name -> bonanza.model.starlark.List.Element
	22,  // 115: bonanza.model.starlark.TargetReference.Configured.providers:type_name -> bonanza.model.starlark.Struct
	68,  // 116: bonanza.model.starlark.Repo.Definition.attr_values:type_name -> bonanza.model.starlark.Struct.Fields
	27,  // 117: bonanza.model.starlark.RepositoryRule.Definition.attrs:type_name -> bonanza.model.starlark.NamedAttr
	13,  // 118: bonanza.model.starlark.RepositoryRule.Definition.implementation:type_name -> bonanza.model.starlark.Function
	27,  // 119: bonanza.model.starlark.Rule.Definition.attrs:type_name -> bonanza.model.starlark.NamedAttr
	8,   // 120: bonanza.model.starlark.Rule.Definition.build_setting:type_name -> bonanza.model.starlark.BuildSetting
	78,  // 121: bonanza.model.starlark.Rule.Definition.cfg_transition:type_name -> bonanza.model.starlark.Transition.UserDefined
	28,  // 122: bonanza.model.starlark.Rule.Definition.exec_groups:type_name -> bonanza.model.starlark.NamedExecGroup
	13,  // 123: bonanza.model.starlark.Rule.Definition.implementation:type_name -> bonanza.model.starlark.Function
	13,  // 124: bonanza.model.starlark.Rule.Definition.initializer:type_name -> bonanza.model.starlark.Function
	75,  // 125: bonanza.model.starlark.RuleTarget.PublicAttrValue.value_parts:type_name -> bonanza.model.starlark.Select.Group
	4,   // 126: bonanza.model.starlark.Select.Condition.value:type_name -> bonanza.model.starlark.Value
	74,  // 127: bonanza.model.starlark.Select.Group.conditions:type_name -> bonanza.model.starlark.Select.Condition
	4,   // 128: bonanza.model.starlark.Select.Group.no_match_value:type_name -> bonanza.model.starlark.Value
	27,  // 129: bonanza.model.starlark.Subrule.Definition.attrs:type_name -> bonanza.model.starlark.NamedAttr
	13,  // 130: bonanza.model.starlark.Subrule.Definition.implementation:type_name -> bonanza.model.starlark.Function
	5,   // 131: bonanza.model.starlark.Target.Definition.alias:type_name -> bonanza.model.starlark.Alias
	16,  // 132: bonanza.model.starlark.Target.Definition.label_setting:type_name -> bonanza.model.starlark.LabelSetting
	20,  // 133: bonanza.model.starlark.Target.Definition.package_group:type_name -> bonanza.model.starlark.PackageGroup
	19,  // 134: bonanza.model.starlark.Target.Definition.predeclared_output_file_target:type_name -> bonanza.model.starlark.PredeclaredOutputFileTarget
	32,  // 135: bonanza.model.starlark.Target.Definition.rule_target:type_name -> bonanza.model.starlark.RuleTarget
	35,  // 136: bonanza.model.starlark.Target.Definition.source_file_target:type_name -> bonanza.model.starlark.SourceFileTarget
	79,  // 137: bonanza.model.starlark.Transition.UserDefined.definition:type_name -> bonanza.model.starlark.Transition.UserDefined.Definition
	13,  // 138: bonanza.model.starlark.Transition.UserDefined.Definition.implementation:type_name -> bonanza.model.starlark.Function
	139, // [139:139] is the sub-list for method output_type
	139, // [139:139] is the sub-list for method input_type
	139, // [139:139] is the sub-list for extension type_name
	139, // [139:139] is the sub-list for extension extendee
	0,   // [0:139] is the sub-list for field type_name
}

func init() { file_bonanza_build_pkg_proto_model_starlark_starlark_proto_init() }
func file_bonanza_build_pkg_proto_model_starlark_starlark_proto_init() {
	if File_bonanza_build_pkg_proto_model_starlark_starlark_proto != nil {
		return
	}
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[1].OneofWrappers = []any{
		(*Value_Aspect)(nil),
		(*Value_Attr)(nil),
		(*Value_Bool)(nil),
		(*Value_Builtin)(nil),
		(*Value_Bytes)(nil),
		(*Value_Depset)(nil),
		(*Value_Dict)(nil),
		(*Value_ExecGroup)(nil),
		(*Value_File)(nil),
		(*Value_Function)(nil),
		(*Value_Int)(nil),
		(*Value_Label)(nil),
		(*Value_List)(nil),
		(*Value_ModuleExtension)(nil),
		(*Value_None)(nil),
		(*Value_Provider)(nil),
		(*Value_RepositoryRule)(nil),
		(*Value_Rule)(nil),
		(*Value_Select)(nil),
		(*Value_Set)(nil),
		(*Value_Str)(nil),
		(*Value_Struct)(nil),
		(*Value_Subrule)(nil),
		(*Value_TagClass)(nil),
		(*Value_TargetReference)(nil),
		(*Value_ToolchainType)(nil),
		(*Value_Transition)(nil),
		(*Value_Tuple)(nil),
	}
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[3].OneofWrappers = []any{
		(*Aspect_Reference)(nil),
		(*Aspect_Definition_)(nil),
	}
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[4].OneofWrappers = []any{
		(*Attr_Bool)(nil),
		(*Attr_Int)(nil),
		(*Attr_IntList)(nil),
		(*Attr_Label)(nil),
		(*Attr_LabelKeyedStringDict)(nil),
		(*Attr_LabelList)(nil),
		(*Attr_Output)(nil),
		(*Attr_OutputList)(nil),
		(*Attr_String_)(nil),
		(*Attr_StringDict)(nil),
		(*Attr_StringList)(nil),
		(*Attr_StringListDict)(nil),
	}
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[5].OneofWrappers = []any{
		(*BuildSetting_Bool)(nil),
		(*BuildSetting_Int)(nil),
		(*BuildSetting_LabelList)(nil),
		(*BuildSetting_String_)(nil),
		(*BuildSetting_StringList)(nil),
	}
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[27].OneofWrappers = []any{
		(*RepositoryRule_Reference)(nil),
		(*RepositoryRule_Definition_)(nil),
	}
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[28].OneofWrappers = []any{
		(*Rule_Reference)(nil),
		(*Rule_Definition_)(nil),
	}
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[33].OneofWrappers = []any{
		(*Subrule_Reference)(nil),
		(*Subrule_Definition_)(nil),
	}
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[35].OneofWrappers = []any{
		(*Transition_ExecGroup)(nil),
		(*Transition_None)(nil),
		(*Transition_Target)(nil),
		(*Transition_UserDefined_)(nil),
		(*Transition_Unconfigured)(nil),
	}
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[51].OneofWrappers = []any{
		(*Dict_Entry_Leaf_)(nil),
		(*Dict_Entry_Parent_)(nil),
	}
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[57].OneofWrappers = []any{
		(*List_Element_Leaf)(nil),
		(*List_Element_Parent_)(nil),
	}
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[61].OneofWrappers = []any{
		(*PackageGroup_Subpackages_OverridesExternal)(nil),
		(*PackageGroup_Subpackages_OverridesInline)(nil),
	}
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[72].OneofWrappers = []any{
		(*Select_Group_NoMatchValue)(nil),
		(*Select_Group_NoMatchError)(nil),
	}
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[74].OneofWrappers = []any{
		(*Target_Definition_Alias)(nil),
		(*Target_Definition_LabelSetting)(nil),
		(*Target_Definition_PackageGroup)(nil),
		(*Target_Definition_PredeclaredOutputFileTarget)(nil),
		(*Target_Definition_RuleTarget)(nil),
		(*Target_Definition_SourceFileTarget)(nil),
	}
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes[75].OneofWrappers = []any{
		(*Transition_UserDefined_Identifier)(nil),
		(*Transition_UserDefined_Definition_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDesc), len(file_bonanza_build_pkg_proto_model_starlark_starlark_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   77,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bonanza_build_pkg_proto_model_starlark_starlark_proto_goTypes,
		DependencyIndexes: file_bonanza_build_pkg_proto_model_starlark_starlark_proto_depIdxs,
		EnumInfos:         file_bonanza_build_pkg_proto_model_starlark_starlark_proto_enumTypes,
		MessageInfos:      file_bonanza_build_pkg_proto_model_starlark_starlark_proto_msgTypes,
	}.Build()
	File_bonanza_build_pkg_proto_model_starlark_starlark_proto = out.File
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_goTypes = nil
	file_bonanza_build_pkg_proto_model_starlark_starlark_proto_depIdxs = nil
}
